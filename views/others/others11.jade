extends ../layout

block link
    link(href='../css/bootstrap.min.css',rel='stylesheet',media='screen')
    link(href='../css/bootstrap-theme.min.css',rel='stylesheet',media='screen')
    link(href='../js/dtree/dtree.css', rel='stylesheet', media='screen')
    link(href='../css/style.css',rel='stylesheet',media='screen')
    link(href='../js/google-code-prettify/prettify.css',rel='stylesheet',media='screen')

block content
    include navbar.jade
    .container
        .row
            .col-sm-3
                include left.jade
            .col-sm-9
                .panel.panel-primary
                    .panel-heading
                        i.glyphicon.glyphicon-book
                        &nbsp;Grunt
                    .panel-body
                        h4 公式サイト
                        p
                            a(href='http://gruntjs.com/',target='_blank') http://gruntjs.com/
                        hr
                        h4 インストール
                        pre
                            :code
                                (sudo )npm install -g grunt-cli
                        hr
                        .alert.alert-info 空のタスクを作成
                        p: u package.jsonの作成
                        p ※ Expressを使用している場合は自動で生成されています。
                        pre npm init
                        p: u package.jsonを記述
                        pre(class='prettyprint lang-js linenums:1')
                            :code
                                {
                                    "name": "grunt-test",
                                    "version": "0.1.0",
                                    ...
                                }
                                ...
                        p: u プロジェクトにgruntをインストール
                        p ※ <mark>開発用にpackage.jsonに記述するためにオプション「--save-dev」でインストール</mark>
                        pre
                            :code
                                npm install grunt --save-dev
                        p: u Gruntfile.jsにタスクを記述する
                        pre(class='prettyprint lang-js linenums:1')
                            :code
                                module.exports = function(grunt){
                                    grunt.initConfig({});
                                    grunt.registerTask('default', []);
                                };
                        p: u タスクの実行
                        pre
                            :code
                                grunt
                        hr
                        .alert.alert-info JavaScriptのミニファイ
                        h4 プラグインのインストール
                        pre
                            :code
                                npm install grunt-contrib-uglify --save-dev
                        p: u タスクの定義
                        pre(class='prettyprint lang-js linenums:1')
                            :code
                                module.exports = function(grunt){
                                  grunt.initConfig({
                                    //親タスク
                                    uglify: {
                                      //子タスク
                                      dist: {
                                        files: {
                                          //出力
                                          'dest/output.min.js': [
                                            //ソース
                                            'src/sample01.js',
                                            'src/sample02.js'
                                          ]
                                        }
                                      }
                                    }
                                  });
                                  //プラグインからタスクを読み込む
                                  grunt.loadNpmTasks('grunt-contrib-uglify');
                                  //デフォルトのタスクとしてuglifyを定義
                                  grunt.registerTask('default', ['uglify']);
                                };
                        p: u タスクの実行
                        pre
                            :code
                                grunt
                        hr
                        .alert.alert-info CoffeeScriptで記述
                        p: u Gruntfile.coffeeにタスクを記述
                        pre(class='prettyprint lang-js linenums:1')
                            :code
                                module.exports = (grunt) ->
                                  grunt.initConfig
                                    uglify:
                                      dist:
                                        files:
                                          'dest/output.min.js':[
                                            'src/sample01.js',
                                            'src/sample02.js'
                                          ]
                                
                                  grunt.loadNpmTasks 'grunt-contrib-uglify'
                                  grunt.registerTask 'default', ['uglify']
                        p: u タスクの実行
                        pre
                            :code
                                grunt
                        hr
                        .alert.alert-info CoffeeScriptをコンパイルしてJavaScriptをミニファイ
                        p: u プラグインのインストール
                        pre
                            :code
                                npm install grunt-contrib-uglify grunt-contrib-coffee --save-dev
                        p: u Gruntfile.coffeeにタスクを記述
                        pre(class='prettyprint lang-js linenums:1')
                            :code
                                module.exports = (grunt) ->
                                  grunt.initConfig
                                    coffee:
                                      options:
                                        join: true
                                      dist:
                                        files:
                                          'dest/sample.js': [
                                            'src/sample01.coffee',
                                            'src/sample02.coffee'
                                          ]
                                    uglify:
                                      dist:
                                        files:
                                          'dest/output.min.js':[
                                            'dest/sample.js'
                                          ]
                                
                                  grunt.loadNpmTasks 'grunt-contrib-coffee'
                                  grunt.loadNpmTasks 'grunt-contrib-uglify'
                                  grunt.registerTask 'default', [
                                    'coffee',
                                    'uglify'
                                  ]
                        p: u タスクの実行
                        pre
                            :code
                                grunt
                        hr
                        .alert.alert-info 親タスクを限定して実行
                        pre
                            :code
                                grunt coffee
                        hr
                        .alert.alert-info 子タスクを限定して実行
                        pre
                            :code
                                grunt coffee:dist
                        hr
                        .alert.alert-info ファイルの変更を監視する
                        p: u プラグインのインストール
                        pre
                            :code
                                npm install grunt-contrib-watch --save-dev
                        p: u Gruntfile.coffeeにタスクを記述
                        pre(class='prettyprint lang-js linenums:1')
                            :code
                                module.exports = (grunt) ->
                                  grunt.initConfig
                                    coffee:
                                      options:
                                        join: true
                                      dist:
                                        src: [
                                          'src/*.coffee'
                                        ]
                                        dest: 'dest/sample.js'
                                    uglify:
                                      dist:
                                        src: ['dest/sample.js']
                                        dest:'dest/output.min.js'
                                    watch:
                                      coffee:
                                        files: '<%= coffee.dist.src %>'
                                        tasks: 'coffee:dist'
                                      uglify:
                                        files: '<%= uglify.dist.src %>'
                                        tasks: 'uglify:dist'
                                
                                  grunt.loadNpmTasks 'grunt-contrib-watch'
                                  grunt.loadNpmTasks 'grunt-contrib-coffee'
                                  grunt.loadNpmTasks 'grunt-contrib-uglify'
                                  grunt.registerTask 'default', [
                                    'watch'
                                  ]
                        p: u タスクの実行
                        pre
                            :code
                                grunt
                        hr
                        .alert.alert-info HTMLとCSSプリプロセッサー
                        p: u プラグインのインストール
                        pre
                            :code
                                npm install grunt-contrib-stylus grunt-contrib-cssmin grunt-contrib-jade grunt-contrib-watch --save-dev
                        p: u stylusを記述する
                        p sample01.styl
                        pre(class='prettyprint linenums:1')
                            :code
                                blue = #3bbfce
                                
                                h1
                                    color: blue
                                
                                .content-navigation
                                    border-color blue
                                    color blue - 9%
                        p sample02.styl
                        pre(class='prettyprint linenums:1')
                            :code
                                margin = 16px
                                
                                .border
                                    padding (margin / 2)
                                    margin (margin / 2)
                        p: u jadeを記述する
                        p index.jade
                        pre(class='prettyprint linenums:1')
                            :code
                                doctype
                                html
                                    head
                                        title Jade+Stylus Compile
                                        link(href='css/styles.min.css',rel='stylesheet')
                                    body
                                        h1 Hello, Grunt
                                        p blah blah
                                        p hoge
                        p: u Gruntfile.coffeeにタスクを記述
                        pre(class='prettyprint lang-js linenums:1')
                            :code
                                module.exports = (grunt) ->
                                  grunt.initConfig
                                    stylus:
                                      dist:
                                        src: ['src/*.styl']
                                        dest: 'dest/sample.css'
                                    cssmin: 
                                      dist:
                                        src: ['dest/sample.css']
                                        dest: 'htdocs/css/styles.min.css'
                                    jade: 
                                      dist:
                                        src: ['src/index.jade']
                                        dest: 'htdocs/index.html'
                                        options:
                                          pretty: true
                                    watch: 
                                      stylus:
                                        files: '<%= stylus.dist.src %>'
                                        tasks: 'stylus:dist'
                                      cssmin:
                                        files: '<%= cssmin.dist.src %>'
                                        tasks: 'cssmin:dist'
                                      jade:
                                        files: '<%= jade.dist.src %>'
                                        tasks: 'jade:dist'
                                
                                  grunt.loadNpmTasks 'grunt-contrib-stylus'
                                  grunt.loadNpmTasks 'grunt-contrib-cssmin'
                                  grunt.loadNpmTasks 'grunt-contrib-jade'
                                  grunt.loadNpmTasks 'grunt-contrib-watch'
                                  grunt.registerTask 'default', 'watch'
                                  grunt.registerTask 'build', [
                                    'stylus',
                                    'cssmin',
                                    'jade'
                                  ]
                        p: u タスクの実行
                        pre
                            :code
                                grunt
                        hr
                        .alert.alert-info 画像を最適化する
                        p あらかじめお使いの環境にoptipngとjpegtranをインストールしておく必要があります。
                        p: u optipngのインストール
                        p windows
                        p
                            | 以下のサイトからOptiPNG（安定版）をダウンロードしてインストールします。
                            br
                            a(href='http://optipng.sourceforge.net/',target='_blank') http://optipng.sourceforge.net/
                        p Mac
                        p MacPortsでインストール
                        pre
                            :code
                                sudo port install optipng
                        p Homebrewでインストール
                        pre
                            :code
                                sudo brew install optipng
                        p Linux
                        pre
                            :code

                        p: u jpegtranのインストール
                        p windows
                        p
                            | 以下のサイトからjpegtran.exeをダウンロードしてインストールします。
                            br
                            a(href='http://jpegclub.org/jpegtran/',target='_blank') http://jpegclub.org/jpegtran/
                        p Mac
                        p MacPortsでインストール
                        pre
                            :code
                                sudo port install jpeg
                        p Homebrewでインストール
                        pre
                            :code
                                sudo brew install jpeg
                        p Linux
                        pre
                            :code
                                yum install libjpeg
                        p: u プラグインのインストール
                        pre
                            :code
                                npm install grunt-img grunt-contrib-watch --save-dev
                        p: u Gruntfile.coffeeにタスクを記述
                        pre(class='prettyprint lang-js linenums:1')
                            :code
                                module.exports = (grunt) ->
                                  grunt.initConfig
                                    img:
                                      dist:
                                        src: ['src/img/*']
                                        dest: 'htdocs/img'
                                    watch:
                                      img:
                                        files: '<%= img.dist.src %>'
                                        tasks: 'img:dist'
                                  
                                  grunt.loadNpmTasks 'grunt-img'
                                  grunt.registerTask 'default', 'watch'
                                  grunt.loadNpmTasks 'grunt-contrib-watch'