extends ../layout

block link
	link(href='../css/bootstrap.min.css',rel='stylesheet',media='screen')
	link(href='../css/bootstrap-theme.min.css',rel='stylesheet',media='screen')
	link(href='../js/dtree/dtree.css', rel='stylesheet', media='screen')
	link(href='../css/style.css',rel='stylesheet',media='screen')
	link(href='../js/google-code-prettify/prettify.css',rel='stylesheet',media='screen')

block content
	include navbar.jade
	.container
		.row
			.col-sm-3
				include left.jade
			.col-sm-9
				.panel.panel-primary
					.panel-heading
						i.glyphicon.glyphicon-book
						| &nbsp;便利なグローバルパッケージ
					.panel-body
						.alert.alert-info js2coffee
						p jsファイルをCoffeeScriptに変換します。
						p: u インストール
						pre
							:code
								(sudo )npm install -g js2coffee
						p: u 使い方
						p バージョンを確認する
						pre
							:code
								js2coffee -v
								js2coffee --version
						p 冗長な記述で変換する
						pre
							:code
								js2coffee -V jsファイル
								js2coffee --verbose jsファイル
						p コメントを削除して変換する
						pre
							:code
								js2coffee -X jsファイル
								js2coffee --no_comments jsファイル
						p 変換後の状態を確認する
						pre
							:code
								js2coffee -l jsファイル
								js2coffee --show_src_lineno jsファイル
						p ヘルプを見る
						pre
							:code
								js2coffee -h
								js2coffee --help
						p クォーテーションをシングルクオートで変換する
						pre
							:code
								js2coffee -sq
								js2coffee --single_quotes
						p 半角スペース4つのインデントで変換する
						pre
							:code
								js2coffee -i4 jsファイル
								js2coffee --indent '    ' jsファイル
						p タブのインデントで変換する
						pre
							:code
								js2coffee -it jsファイル
								js2coffee --indent '\t' jsファイル
						hr
						.alert.alert-info hotnode
						p Node.jsのソースが編集されたら自動的にサーバーを再起動します。
						p: u インストール
						pre
							:code
								(sudo )npm install -g hotnode
						p: u 使い方
						p サーバーを起動する際に、「node サーバー」の代わりに「hotnode サーバー」で起動します。
						pre
							:code
								hotnode サーバー
						hr
						.alert.alert-info forever
						p Node.jsのサーバーがクラッシュしたとき自動的に再起動します。
						p /etc/rc.localファイルにコマンドを記述すればサーバの起動時にforeverが実行されます。
						p: u インストール
						pre
							:code
								(sudo )npm install -g forever
						p: u 使い方
						hr
						.alert.alert-info http-proxy
						p 80番ポートを使って複数のNode.jsのプロセスにホスト名、ドメイン名を割り当てます。
						p /etc/rc.localファイルにコマンドを記述すればサーバの起動時にhttp-proxyが実行されます。
						p: u インストール
						pre
							:code
								(sudo )npm install -g http-proxy
						p: u 使い方
						p proxy.jsを記述します。
						pre(class='prettyprint linenums:1')
							:code
								require('http-proxy').createServer({
									router: {
										'login.nodecookbook.com': 'localhost:3000',
										'nodecookbook.com': 'localhost:8080'
									}
								}).listen(80, function(){
									process.setuid('www-data');
								});
						p windowsの場合は「process.setuid('www-data');」を無効にします。
						pre(class='prettyprint linenums:1')
							:code
								require('http-proxy').createServer({
									router: {
										'login.nodecookbook.com': 'localhost:3000',
										'nodecookbook.com': 'localhost:8080'
									}
								}).listen(80, function(){
									//process.setuid('www-data');
								});
						p 本番環境（Linuxの場合）では/etc/rc.localに追記します。
						pre(class='prettyprint linenums:1')
							:code
								sudo node /フルパス/login/app.js
								sudo node /フルパス/server.js
								sudo node /フルパス/proxy.js
						p foreverを使う場合は/etc/rc.localに以下のように記述します。
						pre(class='prettyprint linenums:1')
							:code
								sudo forever /フルパス/login/app.js
								sudo forever /フルパス/server.js
								sudo forever /フルパス/proxy.js