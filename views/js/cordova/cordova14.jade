extends ../../layout

block link
    link(href='../../css/bootstrap.min.css',rel='stylesheet',media='screen')
    link(href='../../js/dtree/dtree.css', rel='stylesheet', media='screen')
    link(href='../../css/style.css',rel='stylesheet',media='screen')
    link(href='../../js/google-code-prettify/prettify.css',rel='stylesheet',media='screen')

block content
    include navbar
    .container
      .row
        .col-sm-3
            include left
        .col-sm-9
          .panel.panel-primary
            .panel-heading Cordovaプラグインを利用する
            .panel-body
                p Cordova3.0からは、ネイティブ機能を提供するものはすべてプラグインとして管理されるようになりました。以前ではCordovaフレームワークに組み込まれていたネイティブ機能も、すべてプラグインとして提供されています。ソースコードのリポジトリとしても全く別になりました。
                p Cordovaでは、cordova pluginコマンドを用いてプラグインを管理します。開発者はコマンドを通じて様々なプラグインを簡単に導入することができます。
                p 開発者は、公式で提供されているプラグインで以下の機能を利用できます。
                ul
                    li 加速度センサ
                    li カメラ・録音
                    li コンパス
                    li ネットワーク接続
                    li 端末内のコンタクトリスト
                    li デバイス情報
                    li イベント
                    li ファイルストレージ
                    li 位置情報
                    li 国際化
                    li アプリ内ブラウザ
                    li 音声・動画
                    li アラート・ダイアログ・バイブレーション
                p ここでは、Cordovaプラグインについての概要と、実際にアプリのプロジェクトへCordovaプラグインを導入する方法を紹介します。
                .alert.alert-info プラグインを導入する
                p Cordovaプラグインをプロジェクトに導入するためには、cordova pluginコマンドを使います。コマンドには、プラグインのgitリポジトリのURLを指定します。例えば、端末のカメラ機能を利用できるプラグインを導入するには、以下のようにそのプラグインのコードが保管されているgitリポジトリのアドレスを指定します。
                pre
                    :code
                    $ cordova plugin add https://git-wip-us.apache.org/repos/asf/cordova-plugin-camera.git
                p このコマンドを用いると、プロジェクトのpluginsディレクトリに追加したプラグインの実体がダウンロードされます。
                p また、次にcordova prepareコマンド、cordova runコマンド、cordova emulateコマンド、cordova buildコマンドを実行したときに、プラグインのネイティブコード、設定、JavaScript側のインターフェースが各プラットフォームのプロジェクトに反映されます。
                p さっそく導入したCameraプラグインを使ってみましょう。www/js/index.jsの35行目付近にあるonDeviceReadyメソッドの部分を以下のように編集します。
                pre
                :code
                    onDeviceReady: function(){
                        app.receivedEvent('deviceready');

                        // カメラへのオプション
                        var options = {
                            quality: 50,
                            destinationType: navigator.camera.DestinationType.File_URI
                        };

                        // カメラを起動する
                        navigator.camera.getPicture(function(imageData)){
                            alert(imageData);
                        }, function() {
                            alert('fail');
                        }, options);
                    },
                p 編集が完了したら、cordova runコマンドやcordova emulateコマンドで事項してください。
                pre
                    :code
                        $ cordova run -d
                p アプリの起動直後にカメラが起動すれば成功です。他のプラグインも同様のやり方で導入することができます。
                .alert.alert-info プラグインを管理する
                p プロジェクトにインストールされているプラグインを一覧するには、cordova plugin lsコマンドを用います。
                pre
                    :code
                       $ cordova plugin ls
                       [ 'org.apache.core.camera' ]
                p このプロジェクトにインストールしているプラグインの一覧が表示されます。上記の例では、先ほど導入したカメラプラグインの識別子が表示されています。
                p プラグインをプロジェクトからアンインストールするには、cordova plugin rmコマンドにそのプラグインの識別子を指定します。リポジトリの場所を指定してプラグインをインストールするのとは違って、プラグインをアンインストールするときにはそのプラグインの識別子を指定します。
                pre
                    :code
                        $ cordova plugin rm org.apache.core.camera
                p プラグインを取り除いたことを確認するために、cordova plugin lsコマンドを実行します。
                pre
                    :code
                       $ cordova plugin ls
                       No plugins added. Use 'cordova plugin add <plugin>'.
                p プラグインが削除されていることがわかります。
                .alert.alert-info プラグインのインストールを理解する
                p 導入したプラグインがどのようにプロジェクトに反映されるか確認してみましょう。ここでは端末の位置情報を扱うことができるGeolocationプラグインを例として導入してみます。
                p 各種設定や導入したプラグインを実際の各プラットフォームのプロジェクトに反映させるには、cordova prepareコマンドを用います。
                pre
                    :code
                        $ cordova plugin add https://git-wip-us.apache.org/repos/asf/cordova-plugin-geolocation.git

                        $ cordova prepare -d
                p pluginsディレクトリを見ると、org.apache.cordova.core.geolocationディレクトリが作成されています。その中には、先ほどcordova plugin addコマンドで指定したgitリポジトリの内容がそのまま置かれています。
                p では、Androidのプロジェクトを見てみましょう。AndroidManifest.xmlを見ると、端末の位置情報にアクセスするためのパーミッションが追加されています。
                pre
                    :code
                        <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
                        <uses-permission android:name="android.persmission.ACCESS_FINE_LOCATION" />
                p Androidアプリでは、あらかじめAndroid端末の利用する機能をAndroidManifest.xmlに記述します。これにより、もしセキュリティの脆弱性によりアプリ内で任意のコードが実行されたとしても、パーミッションに記述されていない機能は利用できません。また、このパーミッションはGoogle Play Storeでアプリをインストールする際に、このアプリがアクセスする機能としてユーザに表示されます。
                p 位置情報を扱うためのネイティブコードは、platforms/android/src/org/apache/cordova/core以下に追加されます。
                pre
                    :code
                        $ ls platforms/android/src/org/apache/cordova/core
                        CordovaLocationListener.java
                        GPSListener.java
                        GeoBroker.jada
                        NetworkListener.java
                p JavaScript側のインターフェースは、platforms/android/assets/www/plugins/org.apache.cordova.core.geolocation/www/以下に配置されます。
                pre
                :code
                    $ ls platforms/android/assets/www/plugins/org.apache.cordova.core.geolocation/www/
                    Coordinates.js
                    Postion.js
                    PositionError.js
                    geolocation.js
                p また、platforms/android/asset/www/cordova_plugins.jsを見ると、以下のようにGeolocationプラグインの情報が追加されていることがわかります。
                pre
                    :code
                        cordova.define('cordova/plugin_list', function(require, exports, module){
                        module.exports = [
                            {
                                "file":
                                    "plugins/org.apache.cordova.core.geolocation/www/Coordinates.js",
                                "id": "org.apache.cordova.core.geolocation.Coordinates",
                                "clobbers": [
                                    "Coordinates"
                                ]
                            },
                            {
                                "file": "plugins/org.apache.cordova.core.geolocation/www/PositionError.js",
                                "id": "org.apache.cordova.core.geolocation.PositionError",
                                "clobbers": [
                                    "PositonError"
                                ]
                            },
                            {
                                "file": "plugins/org.apache.cordova.core.geolocaton/www/Position.js",
                                "id": "org.apache.cordova.core.geolocation.Position",
                                "clobbers": [
                                    "Position"
                                ]
                            },
                            {
                                "file": "plugins/org.apache.cordova.core.geolocation/www/geolocation.js",
                                "id": "org.apache.cordova.core.geolocation.geolocation",
                                "clobbers": [
                                    "navigator.gelocation"
                                ]
                            }
                        ];
                        });
                p 次はiOSのプロジェクトで更新されたファイルを見てみましょう。platforms/ios/（プロジェクト名）/Pluginsディレクトリには位置情報を扱うObjective-Cのコードが追加されています。
                pre
                    :code
                        $ ls platforms/ios/（プロジェクト名）/Plugins/org.apache.cordova.core.geolocation/
                        CDVLocation.h
                        CDVLocation.m

                p  また、platforms/ios/（プロジェクト名）/config.xmlの内容を見ると、Geolocationプラグインに関する設定項目が追加されています。
                pre
                    :code
                        <feature name="Geolication">
                        <param name="ios-package" value="CDVLocation" />
                        </feature>
                p JavaScrpt側のインターフェースとプラグイン定義は、Androidの場合と同様にplatforms/ios/wwwディレクトリ以下に追加されます。
                p ここでは、cordovaコマンドを通じてプラグインを追加すると、裏ではどのように各プラットフォームのプロジェクトに反映されるかについて解説しました。
                .alert.alert-info プラグインの仕組み
                p Cordovaプラグインプラグインは、Cordova Pluginの仕様に従ってまとめられている1つのパッケージです。このパッケージの中には以下のようなものが含まれています。
                ul
                    li プラグインに関する情報
                    li JavaScriptインターフェース
                    li 各プラットフォーム向けのネイティブコード
                    li 依存関係
                p Cordovaのプラグインには、各プラットフォーム特有のネイティブコードが含まれています。このコードは、iOSではObjective-C、AndroidではJavaで記述されています。また、このパッケージにはHTML5側のインターフェースを定義するJavaScriptのコードが定義されています。
                p Cordovaのプラグインには、プラグインの依存関係を定義することができます。あるプラグインが、別のプラグインの実装に対して依存していることを定義することで、プラグインのインストール時には自動的にその依存先のプラグインも同時にインストールされます。
                p 開発者は、cordova pluginコマンドを使ってこれらのコンポーネントをiOSやAndroidの各プラットフォームに配置します。
                .alert.alert-info 組み込みプラグインの一覧
                p Cordovaがあらかじめ用意しているプラグインとそのgitリポジトリは、以下の通りです。
                table.table
                    tr
                        th プラグイン名
                        th 概要
                        th リポジトリのURL
                    tr
                        td Accelerometer
                        td 加速度センサ
                        td https://git-wip-us.apache.org/repos/asf/cordova-plugin-device-motion.git
                    tr
                        td Camera
                        td カメラ
                        td https://git-wip-us.apache.org/repos/asf/cordova-plugin-camera.git
                    tr
                        td Capture
                        td カメラ・録音
                        td https://git-wip-us.apache.org/repos/asf/cordova-plugin-media-capture.git
                    tr
                        td Compass
                        td コンパス
                        td https://git-wip-us.apache.org/repos/asf/cordova-plugin-device-orientation.git
                    tr
                        td Connection
                        td ネットワーク接続
                        td https://git-wip-us.apache.org/repos/asf/cordova-plugin-network-information.git
                    tr
                        td Contacts
                        td コンタクト
                        td https://git-wip-us.apache.org/repos/asf/cordova-plugin-contacts.git
                    tr
                        td Device
                        td デバイス情報
                        td https://git-wip-us.apache.org/repos/asf/cordova-plugin-device.git
                    tr
                        td Events
                        td イベント
                        td https://git-wip-us.apache.org/repos/asf/cordova-plugin-battery-status.git
                    tr
                        td(rowspan='2') File
                        td ファイルストレージ
                        td https://git-wip-us.apache.org/repos/asf/cordova-plugin-file.git
                    tr
                        td ファイルトランスファー
                        td https://git-wip-us.apache.org/repos/asf/cordova-plugin-file-transfer.git
                    tr
                        td Geolocation
                        td 位置情報
                        td https://git-wip-us.apache.org/repos/asf/cordova-plugin-geolocation.git
                    tr
                        td Globalization
                        td 国際化
                        td https://git-wip-us.apache.org/repos/asf/cordova-plugin-globalization.git
                    tr
                        td InAppBrowser
                        td アプリ内ブラウザ
                        td https://git-wip-us.apache.org/repos/asf/cordova-plugin-inappbrowser.git
                    tr
                        td Media
                        td 音声・動画
                        td 
                    tr
                        td(rowspan='2') Nofification
                        td アラート・ダイアログ
                        td 
                    tr
                        td バイブレーション
                        td 
                    tr
                        td Splashscreen
                        td スプラッシュスクリーン
                        td 
                .alert.alert-info Android向けのCordovaプラグインを実装する
                .alert.alert-info Android向けのプラグイン開発の詳細
                .alert.alert-info iOS向けのCordovaプラグインを実装する
                .alert.alert-info cordovaコマンドからインストールできるプラグインを実装する