<%- include ../head %>
  <body>
 
    <%- include navbar %>

    <div class="container">
      <div class="row">
        <div class="col-sm-3">

        <%- include left %>

        </div>
        <div class="col-sm-9">
          <div class="panel panel-primary">
          <div class="panel-heading">
            <i class="glyphicon glyphicon-book"></i> Node.jsを使ってテンプレートを切り替える</div>
          <div class="panel-body">
            <p>
            サーバーサイド技術を使えば、リクエストされたウェブブラウザのユーザーエージェントを判別し、テンプレートを切り替えてからレスポンスを返すことにより、同じURLで表示を切り替えることができます。
            </p>
          <p>
          <a href="http://site-distribution.herokuapp.com/" target="_blank" class="btn btn-default">
          <i class="glyphicon glyphicon-play"></i> デモ
          </a>
          <a href="https://github.com/yoh-nak/node-site-distribution" target="_blank" type="button" class="btn btn-default btn-warning">
          <span class="glyphicon glyphicon-cloud-download"></span>
          GitHub
          </a>
          </p>
<p class="dtree">
    <script src="js/dtree/dtree.js"></script>
    <p>
      <a href="javascript: treeObj.openAll();">全て開く</a> | 
      <a href="javascript: treeObj.closeAll();">全て閉じる</a>
      <!--<a href="javascript: treeObj.openTo(4, true);">open to: Node 4</a>-->
    </p>
    <script type="text/javascript">
      var treeObj = new dTree('treeObj');
      treeObj.add(0,-1,'TOP');
      treeObj.add(1,0,'node_modules','#');
      treeObj.add(2,1,'ejs','javascript:void(0)');
      treeObj.add(3,2,'..','javascript:void(0)');
      treeObj.add(4,1,'express','javascript:void(0)');
      treeObj.add(5,4,'..','javascript:void(0)');
      treeObj.add(6,0,'public','javascript:void(0)');
      treeObj.add(7,6,'..','javascript:void(0)');
      treeObj.add(8,0,'routes','javascript:void(0)');
      treeObj.add(9,8,'index.js','javascript:void(0)');
      treeObj.add(10,0,'views','#');
      treeObj.add(11,10,'index_m.ejs','javascript:void(0)');
      treeObj.add(12,10,'index.ejs','javascript:void(0)');
      treeObj.add(13,0,'app.js','#');
      treeObj.add(14,0,'package.json','#');
      document.write(treeObj);
      
      /*
      treeObj.add(0,-1,'TOP');
      treeObj.add(1,0,'PHP','../../index.php?t=php');
      treeObj.add(2,1,'インストール・動作環境設定','javascript:void(0)');
      treeObj.add(3,2,'Apache＆PHP のインストール','../../index.php?t=php&p=apache_install');
      treeObj.add(4,3,'まずApache（HTTPサーバ）をインストール','../../index.php?t=php&p=apache_install#a_apache');
      treeObj.add(5,2,'php.iniの設定','../../index.php?t=php&p=ini');
      treeObj.add(6,0,'JavaScript','../../index.php?t=js');
      treeObj.add(7,0,'Ajax','../../index.php?t=ajax');
      treeObj.add(8,0,'CSS','../../index.php?t=css');
      treeObj.add(9,0,'Image Gallery','../../index.php?t=ajax&p=galleryjs','画像JSライブラリ','','','js/dtree/img/imgfolder.gif');
      treeObj.add(10,9,'Couloir','../Couloir/index.html','Couloir');
      treeObj.add(11,9,'GreyBox','../GreyBox5/index.html','GreyBox');
      treeObj.add(12,9,'Lightbox','../lightbox2/index.html','Lightbox');
      treeObj.add(13,0,'ゴミ箱','javascript:void(0)','','','js/dtree/img/trash.gif');
      document.write(treeObj);
      */  
    </script>
</p>

app.js
<pre class="prettyprint linenums">
//モジュール読み込み
var express = require('express')
  , routes = require('./routes')
  , http = require('http')
  , path = require('path');

//ミドルウェア設定
var app = express();
app.set('port', process.env.PORT || 3000);
app.set('views', __dirname + '/views');
app.set('view engine', 'ejs');
app.use(express.favicon());
app.use(express.logger('dev'));
app.use(express.bodyParser());
app.use(express.methodOverride());
app.use(app.router);
app.use(express.static(path.join(__dirname, 'public')));

//developmentモード用設定
if ('development' == app.get('env')) {
  app.use(express.errorHandler());
}

//ルーティング
<mark>app.get('/', routes.index);</mark>

//サーバー起動
http.createServer(app).listen(app.get('port'), function(){
  console.log('Express server listening on port ' + app.get('port'));
});

</pre>

routes/index.js
<pre class="prettyprint linenums">
exports.index = function(req, res){

  //ユーザーエージェント取得
  var ua = <mark>req.headers['user-agent']</mark>.toLowerCase();

  //テンプレート切り替え
  if(ua.indexOf("android") != -1 || ua.indexOf("iphone") != -1 || ua.indexOf("ipod") != -1){
    //スマートフォン用テンプレート
    <mark>res.render('index_m', { title: 'スマートフォンサイト' });</mark>
  }
  else{
    //PC用テンプレート
    <mark>res.render('index', { title: 'PCサイト' });</mark>
  }

};
</pre>

views/index.ejs
<pre class="prettyprint linenums">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;&lt;%= title %&gt;&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;h1&gt;&lt;%= title %&gt;&lt;/h1&gt;
  &lt;/body&gt;
&lt;/html&gt;
</pre>

views/index_m.ejs
<pre class="prettyprint linenums">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;link rel="stylesheet" href="http://code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.css" /&gt;
    &lt;script src="http://code.jquery.com/jquery-1.9.1.min.js"&gt;&lt;/script&gt;
    &lt;script src="http://code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.js"&gt;&lt;/script&gt;
    &lt;title&gt;&lt;%= title %&gt;&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div data-role="page" id="index"&gt;
      &lt;div data-role="header"&gt;
        &lt;h1&gt;&lt;%= title %&gt;&lt;/h1&gt;
      &lt;/div&gt;
      &lt;div data-role="content"&gt;
      &lt;/div&gt;
      &lt;div data-role="footer" data-position="fixed"&gt;
        &lt;h4&gt;Copyright &copy; ナカノヨウスケ&lt;/h4&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</pre>
          </div>
          </div>
        </div>
      </div>
    </div>
    </div>

    <div id="footer"><%= title %></div>
 
    <script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>
    <script src="js/google-code-prettify/prettify.js"></script>
    <script>prettyPrint();</script>
    <script src="js/bootstrap.min.js"></script>
    <script src="coffee/list-counter.js"></script>
  </body>
</html>