extends ../../layout

block link
    link(href='../../css/bootstrap.min.css',rel='stylesheet',media='screen')
    link(href='../../css/bootstrap-theme.min.css',rel='stylesheet',media='screen')
    link(href='../../js/dtree/dtree.css', rel='stylesheet', media='screen')
    link(href='../../css/style.css',rel='stylesheet',media='screen')
    link(href='../../js/google-code-prettify/prettify.css',rel='stylesheet',media='screen')

block content
    include navbar
    .container
        .row
            .col-sm-3
                include left
            .col-sm-9
                .panel.panel-primary
                    .panel-heading
                        i.glyphicon.glyphicon-book
                        |  画像を作る
                    .panel-body
                        h4 ゼロから画像を作る
                        p
                            a.btn.btn-default(href='../demo/canvas/exercise3/index13.html',target='_blank')
                                i.glyphicon.glyphicon-play
                                | デモ
                        pre(class='prettyprint linenums:1')
                            :code
                                doctype html
                                html(lang='ja')
                                    head
                                        meta(charset='utf-8')
                                        meta(name='viewport',content='width=device-width, initial-scale=1.0')
                                        title
                                    body
                                        canvas#myCanvas(width='500',height='500')
                                        script(src='http://code.jquery.com/jquery-1.11.0.min.js')
                                        script
                                            :js
                                                (function(){
                                                    $(function(){
                                                        var canvas = $('#myCanvas');
                                                        var context = canvas.get(0).getContext('2d');

                                                        //ピクセルを生成する
                                                        //createImageData(幅, 高さ);
                                                        var imageData = context.createImageData(200, 200);

                                                        //ピクセルデータを取得して配列に格納
                                                        var pixels = imageData.data;

                                                        //全てのピクセル数を取得
                                                        /***
                                                        生成したピクセルの幅、高さを取得し、幅*高さで全てのピクセル数を取得
                                                        */
                                                        var numPixels = imageData.width * imageData.height;

                                                        //全てのピクセルに対して赤を指定
                                                        for(var i = 0; i < numPixels; i++){
                                                            pixels[i*4] = 255; //赤 ... 0を含む4の倍数
                                                            pixels[i*4+1] = 0; //緑 ... 4の倍数+1
                                                            pixels[i*4+2] = 0; //青 ... 4の倍数+2
                                                            pixels[i*4+3] = 255; //アルファ ... 4の倍数+3
                                                        }

                                                        //生成したピクセルデータを描画する
                                                        //putImageData(ピクセルデータ, x座標, y座標);
                                                        context.putImageData(imageData, 0, 0);
                                                    });
                                                })()
                        hr
                        h4 RGBA値のランダマイズ
                        p
                            a.btn.btn-default(href='../demo/canvas/exercise3/index14.html',target='_blank')
                                i.glyphicon.glyphicon-play
                                | デモ
                        pre(class='prettyprint linenums:1')
                            :code
                                doctype html
                                html(lang='ja')
                                    head
                                        meta(charset='utf-8')
                                        meta(name='viewport',content='width=device-width, initial-scale=1.0')
                                        title
                                    body
                                        canvas#myCanvas(width='500',height='500')
                                        script(src='http://code.jquery.com/jquery-1.11.0.min.js')
                                        script
                                            :js
                                                (function(){
                                                    $(function(){
                                                        var canvas = $('#myCanvas');
                                                        var context = canvas.get(0).getContext('2d');

                                                        //ピクセルを生成する
                                                        var imageData = context.createImageData(200, 200);

                                                        //ピクセルデータを取得して配列に格納
                                                        var pixels = imageData.data;

                                                        //全てのピクセル数を取得
                                                        var numPixels = imageData.width * imageData.height;

                                                        //全てのピクセルのRGBA値に乱数を指定（半透明度のみ固定）
                                                        for(var i = 0; i < numPixels; i++){
                                                            pixels[i*4] = Math.floor(Math.random()*255); //赤
                                                            pixels[i*4+1] = Math.floor(Math.random()*255); //緑
                                                            pixels[i*4+2] = Math.floor(Math.random()*255); //青
                                                            pixels[i*4+3] = 255; //アルファ
                                                        }
                                                        
                                                        //ピクセルを描画する
                                                        context.putImageData(imageData, 0, 0);
                                                    });
                                                })()
                        hr
                        h4 モザイク模様を作る
                        p
                            a.btn.btn-default(href='../demo/canvas/exercise3/index15.html',target='_blank')
                                i.glyphicon.glyphicon-play
                                | デモ
                        pre(class='prettyprint linenums:1')
                            :code
                                doctype html
                                html(lang='ja')
                                    head
                                        meta(charset='utf-8')
                                        meta(name='viewport',content='width=device-width, initial-scale=1.0')
                                        title
                                    body
                                        canvas#myCanvas(width='500',height='500')
                                        script(src='http://code.jquery.com/jquery-1.11.0.min.js')
                                        script
                                            :js
                                                (function(){
                                                    $(function(){
                                                        var canvas = $('#myCanvas');
                                                        var context = canvas.get(0).getContext('2d');

                                                        //ピクセルを生成する
                                                        var imageData = context.createImageData(500, 500);

                                                        //ピクセルデータを取得して配列に格納
                                                        var pixels = imageData.data;

                                                        //モザイク模様のタイルの数を決める
                                                        var numTileRows = 4; //縦方向
                                                        var numTileCols = 4; //横方向


                                                        //個々のタイルのサイズ
                                                        
                                                        //1つのタイルの幅を計算
                                                        /***
                                                        ピクセルデータ全体の幅から一列のタイルの数で割る
                                                        */
                                                        var tileWidth = imageData.width / numTileCols;

                                                        //タイルの高さを計算
                                                        /***
                                                        ピクセルデータ全体の高さから一行のタイルの数で割る
                                                        */
                                                        var tileHeight = imageData.height/numTileRows;


                                                        //1つ1つのタイルの色の指定

                                                        /* 行方向のタイルの数だけループ */
                                                        for(var r = 0; r < numTileRows; r++){

                                                            /* 列方向のタイル数だけのループ */
                                                            for(var c = 0; c < numTileCols; c++){

                                                                //各タイルのピクセル値を設定
                                                                var red = Math.floor(Math.random() * 255);
                                                                var green = Math.floor(Math.random() * 255);
                                                                var blue = Math.floor(Math.random() * 255);


                                                                //1つ1つのタイルの塗りつぶし

                                                                /* タイルの高さ分のピクセル数だけループ */
                                                                for(var tr = 0; tr < tileHeight; tr++){

                                                                    /* タイルの幅の分のピクセル数だけループ */
                                                                    for(var tc = 0; tc < tileWidth; tc++){

                                                                        //Canvasのx座標を取得
                                                                        /***
                                                                        (c*tileWidth) => 何個目のタイルか * 1つのタイルの幅
                                                                        tc => 該当するタイルのx方向のピクセル
                                                                        */
                                                                        var trueX = (c*tileWidth) + tc;

                                                                        //Canvas要素のy座標を取得
                                                                        /*
                                                                        (c*tileHeight) //=> 何個目のタイルか * 1つのタイルの高さ
                                                                        tr => 該当するタイルのy方向のピクセル
                                                                        */
                                                                        var trueY = (r*tileHeight)+tr;


                                                                        //タイル内のピクセル配列のインデックスを取得（公式）
                                                                        var pos = (trueY*(imageData.width*4))+(trueX*4);

                                                                        //ピクセルごとの色の指定
                                                                        pixels[pos] = red; //Red値の指定
                                                                        pixels[pos+1] = green; //Green値の指定
                                                                        pixels[pos+2] = blue; //Blue値の指定
                                                                        pixels[pos+3] = 255; //Alpha値の指定
                                                                    }
                                                                }
                                                            }
                                                        }

                                                        //ピクセルを描画する
                                                        context.putImageData(imageData, 0, 0);
                                                    });
                                                })()
