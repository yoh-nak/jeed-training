<%- include ../head %>
  <body>
 
    <%- include navbar %>

    <div class="container">
      <div class="row">
        <div class="col-sm-3">

        <div class="list-group">
          <a href="js-1" class="list-group-item">
          コアリファレンス[A]
          </a>
          <a href="js-2" class="list-group-item">
          コアリファレンス[B]
          </a>
          <a href="js-3" class="list-group-item">
          コアリファレンス[D]
          </a>
          <a href="js-4" class="list-group-item">
          コアリファレンス[E]
          </a>
          <a href="js-5" class="list-group-item">
          コアリファレンス[F]
          </a>
          <a href="js-6" class="list-group-item">
          コアリファレンス[G]
          </a>
          <a href="js-7" class="list-group-item">
          コアリファレンス[I]
          </a>
          <a href="js-8" class="list-group-item">
          コアリファレンス[J]
          </a>
          <a href="js-9" class="list-group-item">
          コアリファレンス[M]
          </a>
          <a href="js-10" class="list-group-item">
          コアリファレンス[N]
          </a>
          <a href="js-11" class="list-group-item">
          コアリファレンス[O]
          </a>
          <a href="js-12" class="list-group-item">
          コアリファレンス[P]
          </a>
          <a href="js-13" class="list-group-item">
          コアリファレンス[R]
          </a>
          <a href="js-14" class="list-group-item">
          コアリファレンス[S]
          </a>
          <a href="js-15" class="list-group-item">
          コアリファレンス[T]
          </a>
          <a href="js-16" class="list-group-item">
          コアリファレンス[U]
          </a>
        </div>
        <div class="list-group">
        <a href="js-17" class="list-group-item">
        クライアントリファレンス[A]
        </a>
        <a href="js-18" class="list-group-item">
        クライアントリファレンス[B]
        </a>
        <a href="js-19" class="list-group-item">
        クライアントリファレンス[C]
        </a>
        <a href="js-20" class="list-group-item">
        クライアントリファレンス[D]
        </a>
        <a href="js-21" class="list-group-item">
        クライアントリファレンス[E]
        </a>
        <a href="js-22" class="list-group-item">
        クライアントリファレンス[F]
        </a>
        <a href="js-23" class="list-group-item">
        クライアントリファレンス[G]
        </a>
        <a href="js-24" class="list-group-item">
        クライアントリファレンス[H]
        </a>
        <a href="js-25" class="list-group-item">
        クライアントリファレンス[I]
        </a>
        <a href="js-26" class="list-group-item">
        クライアントリファレンス[J]
        </a>
        <a href="js-27" class="list-group-item">
        クライアントリファレンス[K]
        </a>
        <a href="js-28" class="list-group-item">
        クライアントリファレンス[L]
        </a>
        <a href="js-29" class="list-group-item">
        クライアントリファレンス[M]
        </a>
        <a href="js-30" class="list-group-item">
        クライアントリファレンス[N]
        </a>
        <a href="js-31" class="list-group-item">
        クライアントリファレンス[O]
        </a>
        <a href="js-32" class="list-group-item">
        クライアントリファレンス[P]
        </a>
        <a href="js-33" class="list-group-item">
        クライアントリファレンス[S]
        </a>
        <a href="js-34" class="list-group-item">
        クライアントリファレンス[T]
        </a>
        <a href="js-35" class="list-group-item">
        クライアントリファレンス[U]
        </a>
        <a href="js-36" class="list-group-item">
        クライアントリファレンス[V]
        </a>
        <a href="js-37" class="list-group-item active">
        クライアントリファレンス[W]
        </a>
        <a href="js-38" class="list-group-item">
        クライアントリファレンス[X]
        </a>
        </div>


        </div>
        <div class="col-sm-9">
          <div class="panel panel-primary">
          <div class="panel-heading">JavaScriptクライアントリファレンス[w]</div>
          <div class="panel-body">
<pre>
WebSocket
</pre>
<pre>

Window
Webブラウザのウィンドウ、タブ、またはフレーム

     Windowオブジェクトはブラウザのウィンドウ、タブ、またはフレームを表します。詳細は『JavaScrpt第6版』（オライリー）の14章で説明しています。クライアントサイドJavaScriptでは、Windowは「グローバルオブジェクト」として働き、現在のWindowオブジェクトのコンテキストですべての式を評価します。つまり、現在のウィンドウを参照するのに特殊な構文は必要なく、そのウィンドウオブジェクトのプロパティをグローバル変数のように使えます。例えば、windows.documentではなくdocumentと記述できます。同様に、現在のウィンドウオブジェクトのメソッドを関数のように使えます。例えば、window.alert()ではなく、alert()と記述できます。
     実際に、このオブジェクトのプロパティとメソッドには、何らかの方法でブラウザウィンドウの問い合わせ操作を行うものがあります。グローバルオブジェクトであるという理由だけでWindowで定義されているものもあります。ここで示すプロパティやメソッドに加え、WindowオブジェクトはコアJavaScriptで定義されたすべてのグローバルプロパティとグローバル関数も実装しています。詳細は「コアJavaScriptリファレンス」のGlobalを参照してください。
     Webブラウザはウィンドウでさまざまなイベントを発行します。したがって、Windowオブジェクトは多くのイベントハンドラを定義しており、EventTargetで定義されているメソッドを実装しています。
     Windowオブジェクトは、そのウィンドウオブジェクト自身を参照するwindowプロパティとselfプロパティを持っています。こられらを使って、現在のウィンドウを暗黙的でなく明示的に参照できます。
     Windowは、通常は&lt;iframe&gt;タグの形式で他のwindowオブジェクトを含むことができます。各WindowはネストされたWindowオブジェクトの配列に似たオブジェクトです。しかし、通常はWindowオブジェクトを直接インデックス付するのではなく、自己参照のframeプロパティを配列に似たオブジェクトのように使えます。Windowのペアレントプロパティとtopプロパティは、それぞれのWindowを直接含むウィンドウとトップレベルの祖先ウィンドウを示します。
     新しいトップレベルブラウザウィンドウは、Window.oprn()メソッドで作成します。このメソッドを呼び出すときには、open()呼び出しのリターン値を変数に保存し、その変数を使って新しいウィンドウを参照します。新しいウィンドウのopennerプロパティは、新しいウィンドウを開いたウィンドウへの参照になります。


プロパティ
     
     ここに示すプロパティに加え、ウィンドウ内に表示されるドキュメントコンテンツにより、新しいプロパティが登場します。『JavaScript第6版』（オライリー）の第14章「14.7　Windowプロパティのとしてのドキュメント要素」で説明しているように、要素のid属性の値をウィンドウのプロパティのように使ってドキュメント内の要素を参照できます（ウィンドウはグローバルオブジェクトなので、そのプロパティはグローバル変数です）。

     readonly ApplicationCache applicationCache

          ApplicationCacheオブジェクトへの参照。キャッシュされたWebアプリケーションやオフラインWebアプリケーションは、このオブジェクトを使ってキャッシュの更新を管理できます。

     readonly any dialogArguments

          showModalDialog()で作成したWindowオブジェクトでは、このプロパティはshowModalDialog()に渡したarguments値になります。通常のWindowオブジェクトでは、このプロパティは存在しません。詳しい情報は『JavaScript第6版』（オライリー）の14章「14.5　ダイアログボックス」を参照してください。

     readonly Document document

          このウィンドウのコンテンツを表すDocumentオブジェクト（詳細はDocumentを参照してください）。

     readonly Event event（IEのみ）

          Internet Explorerでは、このプロパティは最新のイベントを表すEventオブジェクトを参照します。IE8とそれ以前では、イベントハンドラに必ずイベントオブジェクトを渡すわけではないので、このプロパティでイベントオブジェクトにアクセスしなければいけない場合があります。詳細は『JavaScript第6版』（オライリー）の17章を参照してください。

     readonly Element frameElement

          このWindowが&lt;iframe&gt;内にある場合、このプロパティはそのIframe要素を参照します。トップレベルウィンドウでは、このプロパティはnullです。

     readonly Window frames

          このプロパティは、selfプロパティやwindowプロパティと同様にWindowオブジェクト自身を参照します。すべてのWindowオブジェクトは、その中に含まれるフレームの配列に似たオブジェクトです。ウィンドウw内の最初のフレームを参照するのにw[0]と記述する代わりに、このプロパティを使うともっと明確にw.frames[0]と記述できます。

     readonly History history

          このウィンドウのHitoryオブジェクト。Historyを参照してください。

     readonly long innerHeight
     readonly long innerWidth

          このウインドウのドキュメント表示領域の高さと幅（ピクセル単位）。これらのプロパティは、IE8とそれ以前ではサポートされていません。使用例は『JavaScript第6版』（オライリー）の第15章、例15-9を参照してください。

     readonly unsigned long length

          このフレームに含まれるフレーム数。framesを参照してください。

     readonly Storage localStorage

          このプロパティは、名前と値のペアのクライアント側のストレージを提供するStorageオブジェクトを参照します。localStorageで格納したデータは同じ生成元のドキュメントで見たり共有したりでき、ユーザやスクリプトによって削除されるまで存続します。sesstionStorageと『JavaScript第6版』（オライリー）の20章「20.1　localStorageとsessionStorage」を参照してください。

     readonly Location location

          このウィンドウのLocationオブジェクト。このLocationオブジェクトは、現在ロード済みのドキュメントのURLを示します。このプロパティを新しいURL文字列に設定すると、ブラウザがそのURLのコンテンツをロードして表示します。Locationを参照してください。

     string name
          
          ウィンドウの名前。この名前は、open()メソッドや&lt;frame&gt;タグのname属性でウィンドウを作成するときにオプションで指定します。ウィンドウの名前は、&lt;a&gt;タグや&lt;form&gt;タグのターゲット属性として使えます。target属性をこのように使うと、ハイパーリンクされたドキュメントやフォーム送信結果が指定のウィンドウフレームに表示されます。

     readonly Navigator navigator

          Navigatorオブジェクトへの参照。Navigatorオブジェクトは、Webブラウザのバージョンや設定情報を提供します。Navigatorを参照してください。

     readonly Window opener

          open()を呼び出してこのブラウザウィンドウを開いたスクリプトを含むWindowオブジェクトへの読み書き可能な参照。このように作成されていないウィンドウではnull。このプロパティは、フレームを表すWindowオブジェクトではなく、トップレベルウィンドウを表すWindowオブジェクトのみ有効です。openerプロパティは、新たに作成したウィンドウがそれを作成したウィンドウ内で定義されているプロパティや関数を参照できるようになるため便利です。

     readonly long outerHeight


     readonly long outerWidth


     readonly long pageXOffset
     readonly long pageYOffset


     readonly Window parent


     string returnValue


     readonly Screen screen


     readonly long screenX
     readonly long screenY


     readonly Window self


     readonly Storage sessionStorage


     readonly Window top


     readonly object URL


     readonly Window window




コンストラクタ

     WindowsオブジェクトはクライアントサイドJavaScriptのグローバルオブジェクトなので、クライアントサイド環境のすべてのグローバルコンストラクタを定義しなければいけません。それらはここで列挙しませんが、本書で説明するすべてのグローバルコンストラクタはWindowオブジェクトのプロパティです。たとえば、クライアントサイドJavaScriptはImage()コンストラクタやXMLHttpRequest()コンストラクタを定義しているので、すべてのWindowオブジェクトはImageやXMLHttpRequestという名前のプロパティを持つことになります。

メソッド


     void alert(string message)


     string atob(string atob)


     void blur()

     string btoa(string btoa)


     void clearInterval(long intervalId)


     void clearTimeout(long timeoutId)



     void close()


     boolean confirm(string question)


     void focus()


     CSSStyleDeclaration getComputedStyle(Element elt, [string pseudoElt])


     Window open([string url], [string target], [string features], [string replace])



     void postMessage(any message, string targetOrigin, [MessagePort[] ports])


     void print()


     string prompt(string message, [string default])


     void scroll(long x, long y)


     void scrollBy(long x, long y)


     void scrollTo(long x, long y)

</pre>
<table class="table">
  <tr>
    <th>イベントハンドラ</th><th>呼び出されるとき</th>
  </tr>
  <tr>
    <td>onafterprint</td><td></td>
  </tr>
  <tr>
    <td>onbeforeprint</td><td></td>
  </tr>
  <tr>
    <td>onbeforeunload</td><td></td>
  </tr>
  <tr>
    <td>onblur</td><td></td>
  </tr>
  <tr>
    <td>onerror</td><td></td>
  </tr>
  <tr>
    <td>onfocus</td><td></td>
  </tr>
  <tr>
    <td>onhashchange</td><td></td>
  </tr>
  <tr>
    <td>onload</td><td></td>
  </tr>
  <tr>
    <td>onmessage</td><td></td>
  </tr>
  <tr>
    <td>onoffline</td><td></td>
  </tr>
  <tr>
    <td>ononline</td><td></td>
  </tr>
  <tr>
    <td>onpagehide</td><td></td>
  </tr>
  <tr>
    <td>onpageshow</td><td></td>
  </tr>
  <tr>
    <td>onpopstate</td><td></td>
  </tr>
  <tr>
    <td>onresize</td><td></td>
  </tr>
  <tr>
    <td>onscroll</td><td></td>
  </tr>
  <tr>
    <td>onstorage</td><td></td>
  </tr>
  <tr>
    <td>onunload</td><td></td>
  </tr>
</table>
<pre>


Worker


WorkerGlobalScope



WorkerLocation



WorkerNavigator






</pre>
          </div>
          </div>
        </div>
      </div>
    </div>
    </div>

    <div id="footer"><%= title %></div>
 
    <script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>
    <script src="js/bootstrap.min.js"></script>

  </body>
</html>