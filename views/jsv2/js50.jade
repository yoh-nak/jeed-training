extends ../layout

block link
    include ../link1

block content
    include navbar
    .container
        .row
            .col-sm-3
                include left
            .col-sm-9
                .panel.panel-primary
                    .panel-heading
                        i.glyphicon.glyphicon-book
                        | 変数と数値計算
                    .panel-body
                        h4 四則演算
                        p 以下の計算をコンソールで実行してみましょう。
                        pre(class='prettyprint linenums:1')
                            :code
                                console.log(3 + 2); //= 3＋2＝5
                                console.log(3 - 1); //= 3－2＝1
                                console.log(3 * 2); //= 3×2＝6
                                console.log(3 / 2); //= 3÷2＝1.5
                                console.log(3 % 2); //= 3÷2のあまり＝1

                        hr
                        h4 算術（代数）演算子
                        table.table
                            tr
                                td 演算子
                                td 名前
                                td 式名
                                td 例と結果
                            tr
                                td +
                                td 加算演算子
                                td 加減式
                                td
                                    | 1 + 2; //=
                                    | 3
                            tr
                                td -
                                td 減算演算子
                                td 同上
                                td
                                    | 1 - 2; //=
                                    | -1
                            tr
                                td *
                                td *演算子
                                td 剰余式
                                td
                                    | 2 * 3; //=
                                    | 6
                            tr
                                td /
                                td /演算子
                                td 同上
                                td
                                    | 5 / 2; //=
                                    | 2
                            tr
                                td %
                                td %演算子
                                td 同上
                                td
                                    | 5 % 2; //=
                                    | 1
                        hr
                        h4 変数の使い方
                        pre(class='prettyprint linenums:1')
                            :code
                                var a; //変数の宣言
                                a = 1; //変数への代入
                                a = a + 2; //変数を使った計算
                                console.log('答えは' + a + 'です'); //結果の表示
                        pre(class='prettyprint linenums:1')
                            :code
                                a = undefined #変数の宣言
                                a = 1 #変数への代入
                                a = a + 2 #変数を使った計算
                                console.log '答えは' + a + 'です' #結果の表示
                        p
                            | 参考：JavaScriptではvarで変数を宣言しなくても、代入できますが、グローバル変数という特別な扱いになります（後述）。特別な理由がなければvarで変数宣言して値を代入するようにしましょう。
                        hr
                        h4 変数を宣言したあと値を代入
                        pre(class='prettyprint linenums:1')
                            :code
                                var a;
                                a = 1;
                        pre(class='prettyprint linenums:1')
                            :code
                                a = undefined
                                a = 1
                        p: u 参考：グローバル変数の定義
                        p グローバル変数
                        pre(class='prettyprint linenums:1')
                            :code
                                a = 1;
                        pre(class='prettyprint linenums:1')
                            :code
                                window.a = 1
                        hr
                        h4 変数を宣言するときに初期値をセット
                        pre(class='prettyprint linenums:1')
                            :code
                                var a = 1;
                        pre(class='prettyprint linenums:1')
                            :code
                                a = 1
                        hr
                        h4 変数をまとめてセットする
                        pre(class='prettyprint linenums:1')
                            :code
                                var a; //変数aを宣言
                                var b, c; //変数bとcを宣言
                                var aa = 1; //変数aaを宣言して1で初期化
                                var bb = 22, cc = 33; //変数bbとccを宣言し、それぞれ22と33で初期化
                                var bbb, ccc = 333; //変数bbbとcccを宣言し、後者のみ333で初期化
                        pre(class='prettyprint linenums:1')
                            :code
                                a = undefined #変数aを宣言
                                b = undefined #変数bとcを宣言
                                c = undefined
                                aa = 1 #変数aaを宣言して1で初期化
                                bb = 22 #変数bbとccを宣言し、それぞれ22と33で初期化
                                cc = 33
                                bbb = undefined #変数bbbとcccを宣言し、後者のみ333で初期化
                                ccc = 333
                        hr
                        h4 演算子
                        p
                            | 演算子（オペレータ）とは、与えられた変数／リテラルに対して、あらかじめ決められたなんらかの処理を行う記号のことです。また、演算子によって処理される変数／リテラルのことを被演算子（オペランド）と呼びます。
                        pre(class='prettyprint linenums:1')
                            :code
                                x = a + b;
                        pre(class='prettyprint linenums:1')
                            :code
                                x = a + b
                        table.table
                            tr
                                td x
                                td オペランド（演算対象の変数／リテラル）
                            tr
                                td='='
                                td オペレータ（演算子）
                            tr
                                td a
                                td オペランド（演算対象の変数／リテラル）
                            tr
                                td +
                                td オペレータ（演算子）
                            tr
                                td b
                                td オペランド（演算対象の変数／リテラル）
                        hr
                        h4 変数名につかえる文字
                        pre.
                            半角アルファベット（a～zとA～Z）
                            数字（0～9）
                            _（アンダーバー）
                            $（ドルマーク）

                            以下の変数名は不可
                            数字で始まる名前
                            予約語は不可

                        hr
                        h4 予約語
                        p
                            | 予約語とは、プログラミング言語において字句的には識別子（変数名、関数名、クラス名など）としてのルールを満たしているにもかかわらず、識別子にならない字句要素のことです。
                        table.table
                            tr
                                td break
                                td case
                                td catch
                                td continue
                            tr
                                td debugger
                                td default
                                td delete
                                td do
                            tr
                                td else
                                td finally
                                td for
                                td function
                            tr
                                td if
                                td in
                                td instanceof
                                td new
                            tr
                                td return
                                td switch
                                td this
                                td throw
                            tr
                                td try
                                td typeof
                                td var
                                td void
                            tr
                                td while
                                td width
                                td
                                td
                        p 参考：※undefined、null、NaNは予約語ではないが変数名にするべきではない。
                        hr
                        h4 変数名に使うべきではないキーワード
                        p 以下のキーワードを変数名にしてもエラーになりませんが、予期しないバグが発生する可能性が高いので避けたほうがよいでしょう。
                        table.table
                            tr
                                td abstract
                                td boolean
                                td byte
                                td char
                            tr
                                td class
                                td const
                                td debugger
                                td double
                            tr
                                td enum
                                td export
                                td extends
                                td final
                            tr
                                td float
                                td goto
                                td implements
                                td import
                            tr
                                td int
                                td interface
                                td long
                                td native
                            tr
                                td package
                                td private
                                td protected
                                td public
                            tr
                                td short
                                td static
                                td super
                                td synchronied
                            tr
                                td throws
                                td transient
                                td volatile
                                td
                        hr
                        h4 代入演算子
                        p あらかじめ用意された変数に、追加計算させる場合は、複合演算子によって省略して記述できます。
                        table.table
                            tr
                                td 代入演算子
                                td 複合代入演算子
                                td 説明
                            tr
                                td a = a + 10
                                td  a += 10
                                td 変数の値に10を足す
                            tr
                                td a = a - 10
                                td a -= 10
                                td 変数の値から10を引く
                            tr
                                td a = a * 10
                                td a *= 10
                                td 変数の値に10を掛ける
                            tr
                                td a = a / 10
                                td a /= 10
                                td 変数の値を10で割る
                        hr
                        h4 テキストの連結
                        p テキストは加算演算子（+）を使って連結することができます。
                        pre(class='prettyprint linenums:1')
                            :code
                                console.log('ABC' + 'あいう'); //= 'ABCあいう'
                                console.log('xyz' + 123); //= 'xyz123'
                        pre(class='prettyprint linenums:1')
                            :code
                                console.log 'ABC' + 'あいう' #= 'ABCあいう'
                                console.log 'xyz' + 123 #= 'xyz123'
                        p
                        | ただし、どちらか一方がテキストで一方が数値の場合はテキストとして連結されます。
                        pre(class='prettyprint linenums:1')
                            :code
                                console.log('123' + 45); //= '12345'
                        pre(class='prettyprint linenums:1')
                            :code
                                console.log '123' + 45 #= '12345'

                        p 参考：テキストに1をかけるとテキストは数値に変換されます。
                        pre(class='prettyprint linenums:1')
                            :code
                                console.log(('123' * 1) + 45); //= 168
                        pre(class='prettyprint linenums:1')
                            :code
                                console.log ('123' * 1) + 45 #= 168
                        p テキストも複合演算子を使って、省略して記述できます。
                        pre(class='prettyprint linenums:1')
                            :code
                                var a = 'Hello'; //= 'Hello'
                                a += ' World'; //=   'He  World'
                        pre(class='prettyprint linenums:1')
                            :code
                                a = 'Hello' #= 'Hello'
                                a += ' World' #=   'He  World'