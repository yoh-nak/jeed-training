<%- include ../head %>
  <body>
 
    <%- include navbar %>

    <div class="container">
      <div class="row">
        <div class="col-sm-3">

        <%- include left %>

        </div>
        <div class="col-sm-9">
          <div class="panel panel-primary">
          <div class="panel-heading">
            <i class="glyphicon glyphicon-book"></i> オブジェクト</div>
          <div class="panel-body">

<h4>空の連想配列（オブジェクト）の作成</h4>

<pre>
var 変数 = {}; //=>　オブジェクトリテラル
var 変数  = new Object(); //=> オブジェクト
var 変数 = new Object(要素の数); //=> オブジェクト
</pre>

<h4>連想配列（オブジェクト）に初期値を設定</h4>
<pre>
var 変数 = {キー1: 値1, キー2: 値2, キー3: 値3, …};

var 変数 = {
  キー1: 値1,
  キー2: 値2,
  キー3: 値3,
   …
};
</pre>

<pre class="prettyprint">
var a = {"dragon":"りゅう", "sword":"つるぎ", "egg":"たまご"}

var a = {
  "dragon":"りゅう",
  "sword":"つるぎ",
  "egg":"たまご"
}
</pre>

<hr>
<h4>連想配列（オブジェクト）の値を取得</h4>

<pre>
変数 = 配列[キー];
変数 = 配列.キー;
</pre>


<pre class="prettyprint">
var a = {"dragon":"りゅう", "sword":"つるぎ", "egg":"たまご"}
document.writeln(a["dragon"]);
document.writeln(a["sword"]);
document.writeln(a["egg"]);
</pre>

<pre class="prettyprint">
var a = {"dragon":"りゅう", "sword":"つるぎ", "egg":"たまご"}
document.writeln(a.dragon);
document.writeln(a.sword);
document.writeln(a.egg);
</pre>

<h4>for in文</h4>
<pre>
for(var 変数 in 配列／オブジェクト){
  オブジェクト[変数]で値を取り出す
}
</pre>
<p>オブエクとをfor in文で取得すると以下のようになります。</p>
<pre class="prettyprint">
var obj = {'国語': 98, '算数': 82, '理科': 70, '社会': 86, '英語': 53};
var total = 0;
var msg = '';

//オブジェクトのデータを順番に取得します。
for(var key in obj){
  //keyにはobjオブジェクトのキーが入ります。
  //obj[key]にはオブジェクトのキーに対する値が取得されます。
  msg += key + ': ' + obj[key] + '\n';
  total += obj[key];
}
msg += '合計: ' + total + '\n';
msg += '平均: ' + (total/5);
alert(msg);
</pre>
<p>for in文はオブジェクトとキーをピリオド（.）で連結して表現できないので注意しましょう。</p>
<pre class="prettyprint">
for(var key in obj){
  msg += key + <mark>obj.key</mark> + '\n';
  total += <mark>obj.key</mark>;
}
</pre>
<p>配列はfor文で取得することができますが、for in文を使うと以下のようになります。</p>
<pre class="prettyprint">
var test = [98, 82, 70, 86, 53];
var subject = ['国語', '算数', '理科', '社会', '英語'];
var total = 0;
var msg = '';
for(var i in test){
  msg += subject[i] +  ': ' + test[i] + '\n';
  total += test[i];
}
msg += '合計: ' + total + '\n';
msg += '平均: ' + (total/5);
alert(msg);
</pre>

<hr>

<h4>オブジェクトに値を代入</h4>

<pre>
配列[キー] = 値;
配列.キー = 値;
</pre>

<pre class="prettyprint">
var obj = {'kokugo': 98, 'sansu': 82, 'rika': 70};
obj.syakai = 86;
obj.eigo = 53;
console.log(obj);
</pre>

<pre class="prettyprint">
var a = new Object();
a["dragon"] = "りゅう";
a["sword"] = "つるぎ";
a["egg"] = "たまご";
document.writeln(a["dragon"]);
document.writeln(a["sword"]);
document.writeln(a["egg"]);
</pre>

<pre class="prettyprint">
var a = new Object();
a.dragon = "りゅう";
a.sword = "つるぎ";
a.egg = "たまご";
document.writeln(a.dragon);
document.writeln(a.sword);
document.writeln(a.egg);
</pre>

<hr>
<hr>
<h4>日本語のキー</h4>
<p>以下のように日本語のキーをドット（.）で連結できますが、バグの温床となりますので、日本語でキーを扱う場合は大カッコ（[]）でキーを表現するか、日本語のキーは使わないほうがよいでしょう。
<pre>
var obj = {};
obj.国語 = 98;
</pre>
<p>
<pre>
var obj = {};
obj['国語'] = 98;
</pre>

<hr>

<h4>オブジェクトのネスト（二次元オブジェクト）</h4>
<pre>
var grade = {
  '数学': {
    '数学Ⅰ': 'B',
    '数学Ⅱ': 'A',
    '数学Ⅲ': 'C'
  },
  '物理': {
    '物理ⅠB': 'A',
    '物理Ⅱ': 'B'
  }
}
</pre>
<p>外側のオブジェクトと内側のオブジェクトをすべて取得する</p>
<pre class="prettyprint">
var grade = {
  '数学': {
    '数学Ⅰ': 'B',
    '数学Ⅱ': 'A',
    '数学Ⅲ': 'C'
  },
  '物理': {
    '物理ⅠB': 'A',
    '物理Ⅱ': 'B'
  }
}

for(var a in grade){
  console.log(a); //外側のキーを取得
  console.log(grade[a]); //外側の値を取得
  for(var b in grade[a]){
    console.log(b); //内側のキーを取得
    console.log(grade[a][b]); //内側の値を取得
  }
}
</pre>
<p>内側のオブジェクトを限定して取得する</p>
<pre class="prettyprint">
var grade = {
  '数学': {
    '数学Ⅰ': 'B',
    '数学Ⅱ': 'A',
    '数学Ⅲ': 'C'
  },
  '物理': {
    '物理ⅠB': 'A',
    '物理Ⅱ': 'B'
  }
}

for(var key in grade['数学']){
  console.log(key); //キーのみ取得
  console.log(grade['数学'][key]); //値のみ取得
}
</pre>

<p>以下のように配列と、オブジェクトを入れ子にすることもできます。</p>
<pre>
var grade = [
  {
    '数学Ⅰ': 'B',
    '数学Ⅱ': 'A',
    '数学Ⅲ': 'C'
  },
  {
    '物理ⅠB': 'A',
    '物理Ⅱ': 'B'
  }
];
</pre>
          </div>
          </div>
        </div>
      </div>
    </div>
    </div>

    <div id="footer"><%= title %></div>
 
    <script src="http://code.jquery.com/jquery.js"></script>
    <script src="js/google-code-prettify/prettify.js"></script>
    <script>prettyPrint();</script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/list-counter.js"></script>
  </body>
</html>