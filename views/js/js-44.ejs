<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title><%= title %></title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="css/bootstrap.min.css" rel="stylesheet" media="screen">
    <link href="css/common.css" rel="stylesheet" media="screen">
    <link href="js/google-code-prettify/prettify.css" rel="stylesheet" media="screen">
  </head>
  <body>
 
    <nav class="navbar navbar-default">
      <div class="navbar-header">
        <button class="navbar-toggle" data-toggle="collapse" data-target=".target">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="/"><%= title %></a>
      </div>
 
      <div class="collapse navbar-collapse target">
        <ul class="nav navbar-nav">
          <li><a href="js-39">文法</a></li>
          <li><a href="js-1">リファレンス</a></li>
        </ul>
      </div>
    </nav>

    <div class="container">
      <div class="row">
        <div class="col-sm-3">

        <div class="list-group">
          <a href="js-1" class="list-group-item">
          <i class="badge badge-info"></i> コアリファレンス
          </a>
          <a href="js-17" class="list-group-item">
          <i class="badge badge-info"></i> クライアントリファレンス
          </a>
        </div>

        </div>
        <div class="col-sm-9">
          <div class="panel panel-primary">
          <div class="panel-heading">
            <i class="glyphicon glyphicon-book"></i> 出力してみる</div>
          <div class="panel-body">
            <h4>consoleオブジェクト</h4>
            <p>Node.jsのREPL*で実行してみましょう。</p>
            <p>REPL：Read Evaluate Print Loopは対話的に JavaScript を実行して結果を確認する手段を提供します。 デバッグやテストやその他の様々なことを試す用途で利用されます。</p>
<pre class="prettyprint">
console.log('Hello, World!'); //=>logメソッド
</pre>
            <hr>

            <p>ブラウザのコンソールに出力してみましょう。</p>
<pre class="prettyprint">
console.log('Hello, World!');
</pre>
            <hr>
            <p>個別に情報を出力してみましょう。</p>
<pre class="prettyprint">
console.debug('Hello, World!'); //=>debugメソッド：デバッグコンソールに出力
console.info('Hello, World!'); //=>infoメソッド：情報コンソールに出力
console.warn('Hello, World!'); //=>warnメソッド：警告コンソールに出力
console.error('Hello, World!'); //=>errorメソッド：エラーコンソールに出力
</pre>
            <p>その他のconsoleオブジェクトのメソッドはMOZILLA DEVELOPER NETWORKを参照してください。</p>

            <p>
              <a href="https://developer.mozilla.org/ja/docs/Web/API/console" target="_blank" class="btn btn-default">
              <i class="glyphicon glyphicon-info-sign"></i> 参考
              </a>
            </p>
            <hr>

            <h4>alertメソッド（windowオブジェクト）</h4>
            <p>Node.jsのREPL*に入力してみましょう。</p>
<pre class="prettyprint">
window.alert('Hello, World');
</pre>
            <p>windowオブジェクトはクライアントサイドJavaScript固有のオブジェクトのため、Node.jsでは実行できません。</p>
            <p>ブラウザのコンソールで実行してみましょう。</p>
<pre class="prettyprint">
window.alert('Hello, World!');
</pre>
            <p>windowオブジェクトのメソッドは省略して実行できます。</p>
<pre class="prettyprint">
alert('Hello, World!');
</pre>

            <p>参考：windowsオブジェクトのスコープ内（グローバルスコープ内）ではthisをつけて実行できます。</p>
<pre class="prettyprint">
this.alert('Hello, World');
</pre>

            <p>その他のwindowオブジェクトのメソッドをMOZILLA DEVELOPER NETWORKで確認してみましょう。</p>

            <p>
              <a href="https://developer.mozilla.org/ja/docs/Web/API/Window" target="_blank" class="btn btn-default">
              <i class="glyphicon glyphicon-info-sign"></i> 参考
              </a>
            </p>

            <hr>

            <h4>document.write/document.writelnメソッド</h4>
            <p>documentオブジェクトはwindowオブジェクトの子オブジェクトのため、window.document.writeのように記述しますが、windowオブジェクトを省略して記述できます。ただしdocumentオブジェクトは省略できません。</p>
            
            <p>ブラウザのコンソールで実行してみましょう。</p>
<pre class="prettyprint">
document.write('Hello, World!');
</pre>

            <p>ブラウザに前に表示されていたコンテンツがすべて上書きされてしまいます。</p>
            
            <p>複数回実行してみましょう。「Hello, World!」が続けて表示されます。</p>
<pre class="prettyprint">
document.write('Hello, World!');
document.write('Hello, World!');
</pre>

            <p>参考：&lt;br&gt;タグを追加すると。改行されます。</p>
<pre class="prettyprint">
document.write('Hello, World!&lt;br&gt;');
document.write('Hello, World!');
</pre>

            <p>参考：ocument.writelnメソッドはdocument.writeメソッドと共同は同じですが、改行コード（\n）が末尾に追加されます。</p>
<pre class="prettyprint">
document.writeln('Hello, World!');
document.writeln('Hello, World!');
</pre>


<p>document.write/document.writelnメソッドをMOZILLA DEVELOPER NETWORKで確認してみましょう。</p>

            <p>
              <a href="https://developer.mozilla.org/ja/docs/Web/API/document.write" target="_blank" class="btn btn-default">
              <i class="glyphicon glyphicon-info-sign"></i> 参考：document.write
              </a>
              <a href="https://developer.mozilla.org/ja/docs/Web/API/document.writeln" target="_blank" class="btn btn-default">
              <i class="glyphicon glyphicon-info-sign"></i> 参考：document.writeln
              </a>
            </p>

          </div>
          </div>
        </div>
      </div>
    </div>
    </div>

    <div id="footer" style="background:rgb(66, 139, 202);text-align:center;padding:0.6em;box-sizing:border-box;color:white;"><%= title %></div>
 
    <script src="http://code.jquery.com/jquery.js"></script>
    <script src="js/google-code-prettify/prettify.js"></script>
    <script>prettyPrint();</script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/list-counter.js"></script>
  </body>
</html>