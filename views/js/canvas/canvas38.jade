include ../../head.jade
    body
        include navbar.jade
        div.container
            div.row
                div.col-sm-3
                    include bowling.jade
                div.col-sm-9
                    div.panel.panel-primary
                        div.panel-heading ユーザーインターフェースをアクティブにする
                        div.panel-body
                            p 現状では、ゲームは見た目が悪く、UIさえ動きません。幸い、UIの問題は簡単に解決して動かすことができます。
                            p startGame関数の上に、次のコードを挿入しましょう。
                            pre(class='prettyprint linenums:13')
                                | var ui = $('#gameUI');
                                | var uiIntro = $('#gameIntro');
                                | var uiStats = $('#gameStats');
                                | var uiComplete = $('#gameComplete');
                                | var uiPlay = $('#gamePlay');
                                | var uiReset = $('.gameReset');
                                | var uiRemaining = $('#gameRemaining');
                                | var uiScore = $('.gameScore');
                            p これらは、UIのさまざまなHTML要素に対応する変数です。いずれ、要素に簡単にアクセスするためにこれらの変数を使うことになりますが、現状ではUIの個々のDOM要素に対するショートカットができているだけです。
                            p 次に、この時点で表示される初期画面をきちんと整理するために、不要なUI要素は消去し、ボタンをアクティブにして、実際にゲームを始め、画面を切り替えられるようにしましょう。init関数のなかに次のコードを挿入します。
                            pre(class='prettyprint linenums:37')
                                | uiStats.hide();
                                | uiComplete.hide();
                                | 
                                | uiPlay.click(function(e) {
                                |   e.preventDefault();
                                |   uiIntro.hide();
                                |   startGame();
                                | });
                                | 
                                | uiReset.click(function(e) {
                                |   e.preventDefault();
                                |   uiComplete.hide();
                                |   startGame();
                                | });
                            p 最初の2行でUIのゲーム、完了画面が消え、ゲームの画面がすぐにきれいになります。その後ろは、クリックイベントリスナー（クリックイベントが起きたときに呼び出されるコード。耳を済ませてイベントが発生する音を聞き取り、ただちに反応するというイメージ）が2つ続いています。1つは最初の画面のplayボタンのためのもので、もう1つはゲーム画面、完了画面のresetボタンのためのものです。どちらのハンドラも、UIの対応する画面を消去し、startGame関数を呼び出してゲームを開始します。
                            p ゲーム開始時にはゲーム画面を表示したいので、startGame関数の冒頭に次のコードを挿入します。
                            pre(class='prettyprint linenums:25')
                                | uiScore.html('0');
                                | uiStats.show();
                            p 1行目は、文字列の"0"をセットすることにより、スコア表示をリセットします。2行目は、ゲーム中にゲーム画面が表示されるようにします。このように、UIの値やその他さまざまな画面の設定、変更は、ゲーム中で必要になった都度行います。
                            p
                                a.btn.btn-default(href='demo/canvas/exercise6/index3.html',target='_blank')
                                    i.glyphicon.glyphicon-play
                                    | デモ
                            pre(class='prettyprint linenums:1')
                                | $(function() {
                                |   var canvas = $('#gameCanvas');
                                |   var context = canvas.get(0).getContext('2d');
                                |   
                                |   //キャンバスのサイズ
                                |   var canvasWidth = canvas.width();
                                |   var canvasHeight = canvas.height();
                                |   
                                |   //ゲームの設定
                                |   var playGame;
                                | 
                                |   //ゲームのUI
                                |   var ui = $('#gameUI');
                                |   var uiIntro = $('#gameIntro');
                                |   var uiStats = $('#gameStats');
                                |   var uiComplete = $('#gameComplete');
                                |   var uiPlay = $('#gamePlay');
                                |   var uiReset = $('.gameReset');
                                |   var uiRemaining = $('#gameRemaining');
                                |   var uiScore = $('.gameScore');
                                |   
                                |   //ゲームをリセット、開始する
                                |   function startGame() {
                                |       //ゲームのリセット
                                |       uiScore.html('0');
                                |       uiStats.show();
                                | 
                                |       //ゲームの初期設定をする
                                |       playGame = false;
                                |               
                                |       //アニメーションループを開始する
                                |       animate();
                                |   }
                                |   
                                |   //ゲームの初期化をする
                                |   function init(){
                                |       uiStats.hide();
                                |       uiComplete.hide();
                                |       
                                |       uiPlay.click(function(e) {
                                |           e.preventDefault();
                                |           uiIntro.hide();
                                |           startGame();
                                |       });
                                |       
                                |       uiReset.click(function(e) {
                                |           e.preventDefault();
                                |           uiComplete.hide();
                                |           startGame();
                                |       });
                                |   };
                                |   
                                |   //アニメーションループ
                                |   function animate() {        
                                |       //クリア
                                |       context.clearRect(0, 0, canvasWidth, canvasHeight);
                                |       
                                |       if (playGame) {
                                |           //33ミリ秒後に再びアニメーションを実行する
                                |           setTimeout(animate, 33);
                                |       }
                                |   }
                                |   init();
                                | });
        div#footer=title
        script(src='http://code.jquery.com/jquery.js')
        script(src='js/google-code-prettify/prettify.js')
        script.
            prettyPrint();
        script(src='js/bootstrap.min.js')
        script(src='coffee/list-counter.js')