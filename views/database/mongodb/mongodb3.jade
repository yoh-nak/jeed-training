extends ../../layout

block link
    include ../../link2

block content
    include ../navbar
    .container
        .row
            .col-sm-3
                include ../left
            .col-sm-9
                .panel.panel-primary
                    .panel-heading
                        i.glyphicon.glyphicon-book
                        | &nbsp;MongoDBのCRUD（Create, Read, Update, Delete）
                    .panel-body
                        .alert.alert-info MongoDBの動作確認
                        p MongoDBがインストールされているか
                        pre.
                            mongo --version
                        p サービスが起動しているか（Linux）
                        pre.
                            sudo service mongod status
                        hr
                        .alert.alert-info MongoDBの開始
                        pre
                            :code
                                mongo データベース名
                        p データベース名を指定しないとtestというデータベースが作成される
                        pre
                            :code
                                mongo
                        hr
                        .alert.alert-info MongoDBの終了
                        pre
                            :code
                                exit
                        pre
                            :code
                                quit()
                        pre
                            :code
                                Ctrl + C
                        hr
                        .alert.alert-info ヘルプの表示
                        p 全体のヘルプを表示
                        pre
                            :code
                                help
                        p dbメソッドのヘルプ
                        pre
                            :code
                                db.help()
                        p 使用中のデータベースの統計を表示
                        pre
                            :code
                                db.stats()
                        hr
                        .alert.alert-info データベースの切り替え
                        p 存在する場合は切り替え、存在しない場合は新規作成
                        pre
                            :code
                                use tutorial
                        hr
                        .alert.alert-info コレクションの作成
                        pre
                            :code
                                db.createCollection('user')；
                        hr
                        .alert.alert-info コレクションのリネーム
                        pre
                            :code
                                db.user.renameCollection('users');
                        hr
                        .alert.alert-info コレクションの一覧表示
                        pre
                            :code
                                show collections
                        hr
                        .alert.alert-info usersコレクションに挿入
                        pre
                            :code
                                db.users.insert({username: 'smith'})
                        hr
                        .alert.alert-info usersコレクションの検索
                        pre
                            :code
                                db.users.find()
                        hr
                        .alert.alert-info usersコレクションの挿入／更新
                        p _idの指定がなければusersコレクションにinsert
                        pre
                            :code
                                db.users.save({username: 'jones'})
                        p _idの指定があればusersコレクションのうち、指定した_idのusernameドキュメントをupdate
                        pre
                            :code
                                db.users.save({_id: ObjectId('52fdd2ebc5976a3f2d4cdab', 'username': 'nakano'})
                        hr
                        .alert.alert-info usersコレクションの全削除
                        pre
                            :code
                                db.users.remove()
                        hr
                        .alert.alert-info usersコレクションのドキュメント数
                        pre
                            :code
                                db.users.count()
                        hr
                        .alert.alert-info usersコレクションの検索
                        pre
                            :code
                                db.users.find();
                                db.users.find({username:'jones'});
                                db.users.find({_id:ObjectId('518869be37d5684f207935ae')})
                        hr
                        .alert.alert-info uusernameがjonesではないデータを表示（ne = not equal）
                        pre
                            :code
                                db.users.find({username: {$ne: 'jones'}});
                        hr
                        .alert.alert-info ドキュメントの更新
                        pre
                            :code
                                db.users.update({username: 'sato'}, {$set: {username: 'saito'}})
                        hr
                        .alert.alert-info ドキュメントを追加して更新
                        pre
                            :code
                                db.users.update({username: 'smith'}, {$set: {country: 'Canada'}})
                        hr
                        .alert.alert-info usersコレクションのusernameがjonesのものからcountryだけ表示
                        pre
                            :code
                                db.users.find({username:'jones'}, {country: true});
                        hr
                        .alert.alert-info usersコレクションのドキュメントを削除
                        pre
                            :code
                                db.users.update({username: 'smith'},{$unset: {country: 1}}) 


                                >db.users.update({username: 'smith'},
                                {$set: {favorites: 
                                {
                                cities: ['Chicago', 'Cheyenne'],
                                movies: ['Casablanca', 'The Sting']
                                }
                                }
                                })


                                db.users.update({username: 'jones'},
                                {$set: {favorites:
                                {
                                movies: ['Casablanca', 'Rocky']
                                }
                                }
                                })


                                >db.users.find()

                        hr
                        .alert.alert-info 絞り込み検索
                        pre
                            :code
                                >db.users.find({'favorites.movies': 'Casablanca'}) 

                                複数行update（4つ目の引数がtrueで複数行更新）
                                >db.users.update({'favorites.movies': 'Casablanca'},
                                {$addToSet: {'favorites.movies': 'The Maltese Falcon'}},
                                false,
                                true)

                        hr
                        .alert.alert-info コレクションのドキュメントの削除
                        pre
                            :code
                                >db.users.remove({'favorites.cities': 'Cheyenne'})
                        hr
                        .alert.alert-info コレクションの削除
                        pre
                            :code
                                >db.users.drop()
                        hr
                        .alert.alert-info データベースの一覧表示
                        pre
                            :code
                                >show dbs
                        hr
                        .alert.alert-info コレクションの一覧表示
                        pre
                            :code
                                >show collections
                        hr
                        .alert.alert-info データベースの削除
                        pre
                            :code
                                >use tutorial

                                >db.dropDatabase()

                                >use tutorial

                                >for(var i=0; i<200000; i++){
                                db.numbers.save({num: i});
                                }

                                >db.numbers.find()


                                >db.numbers.find({num: 500})


                                199995件目より後を表示（gt = greater than）
                                >db.numbers.find({num: {'$gt': 199995}})


                                20件目以降25件目より前を表示（lt = less than）
                                >db.numbers.find({num: {'$gt': 20, '$lt': 25}})


                                $gte（greater than or equal to 以上）
                                $lte（less than or equal to 以下）


                                $regex（正規表現）
                                >db.numbers.find({num: {$regex: /[0-2][0-9]/i}})


                                昇順にソートする
                                >db.numbers.find().sort({num: 1);


                                降順にソートする
                                >db.numbers.find().sort({num: -1);


                                1件だけ表示
                                >db.numbers.findOne();


                                3件だけ表示
                                >db.numbers.find().limit(3);




                                2件目（0件目あり）のドキュメントから3件表示
                                >db.numbers.find().slip(2).limit(3);


                                絞り込んだドキュメントの件数を表示
                                >db.numbers.fine().count();


                                一意の値を表示
                                >db.numbers.distinct('num');


                                100件目、200件目、300件目を抽出
                                >db.numbers.find({'num': {$in: [100, 200, 300]});
                        hr
                        .alert.alert-info 100件目、200件目、300件目以外を抽出（nin = not in）
                        pre
                            :code
                                >db.numbers.find({'num': {$nin: [100, 200, 300]});
                        hr
                        .alert.alert-info numbersコレクションにemailがあるドキュメントを抽出
                        pre
                            :code
                                >db.numbers.find({'email': {$exits: true});
                        hr
                        .alert.alert-info numbersコレクションにemailがないドキュメントを抽出
                        pre
                            :code
                                >db.numbers.find({'email': {$exits: false});
                        hr
                        .alert.alert-info 数値を5繰り上げる（inc = increment）
                        pre
                            :code
                                >db.numbers.update({'num': 100}, {$inc: {'num': 5}})
                        hr
                        .alert.alert-info 数値を20繰り下げる
                        pre
                            :code
                                >db.numbers.update({'num': 100}, {$inc: {'num': -20}})
                        hr
                        .alert.alert-info リネームする
                        pre
                            :code
                                >db.numbers.update({'num': 100}, {$rename: {'num': 'number'}})
                        hr
                        .alert.alert-info データがあったら更新、なかったらインサート（3つ目の引数upsert）
                        pre
                            :code
                                >db.numbers.update({'num': 100}, {$inc: {'num': 5}}, true);
                        hr
                        .alert.alert-info １件しか更新されない
                        pre
                            :code
                                >db.numbers.update({}, {$inc: {'num': 5}});
                        hr
                        .alert.alert-info 全件更新される（4つ目の引数multi）
                        pre
                            :code
                                >db.numbers.update({}, {$inc: {'num': 5}}, false, true);
                        hr
                        .alert.alert-info 構造の確認
                        pre
                            :code
                                >db.numbers.find({num: {'$gt': 199995}}).explain()
                        hr
                        .alert.alert-info インデックスをつける（昇順のインデックスをnumキーにつける）
                        pre
                            :code
                                >db.numbers.ensureIndex({num: 1})
                        hr
                        .alert.alert-info インデックスをつける（降順のインデックスをnumキーにつける）
                        pre
                            :code
                                >db.numbers.ensureIndex({num: -1})
                        hr
                        .alert.alert-info インデックスの確認
                        pre
                            :code
                                >db.numbers.getIndexes() 
                        hr
                        .alert.alert-info クエリのレスポンスが上がっている
                        pre
                            :code
                                >db.numbers.find({num: {'$gt': 199995}}).explain() 
                        hr
                        .alert.alert-info インデックスの削除
                        pre
                            :code
                                >db.numbers.dropIndex({num: 1})
                        hr
                        .alert.alert-info ユニークキーをつける
                        pre
                            :code
                                >db.numbers.ensureIndex({num: 1}, {'uniquie': true})


                                command.jsで保存
                                db.numbers.remove({'num': 100);

                        hr
                        .alert.alert-info 外部ファイルを実行
                        pre
                            :code
                                mongo tutorial command.js

                                load('commands.js');
                        hr
                        .alert.alert-info バックアップをとる
                        pre
                            :code
                                mongodump --db tutorial
                        hr
                        .alert.alert-info バックアップの復元
                        pre
                            :code
                                mongorestore
                        hr
                        .alert.alert-info もとのデータベースを削除して復元
                        pre
                            :code
                                mongorestore --drop

                                >db.stats()
                                >db.runCommand({dbstats: 1})
                                >db.runCommand({collstats: 'numbers'})
                                >db.runCommand()
                                >db.runCommand
                                >db.$cmd.findOne({collstats: 'numbers'})
