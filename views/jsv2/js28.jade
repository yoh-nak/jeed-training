extends ../layout

block link
    include ../link1

block content
    include navbar
    .container
        .row
            .col-sm-3
                include left
            .col-sm-9
                .panel.panel-primary
                    .panel-heading
                        i.glyphicon.glyphicon-book
                        |  サーバーにリアルタイムに送信
                    .panel-body
                        pre.
                            npm install socket.io --save
                        p app.js
                        pre(class='prettyprint linenums:1')
                            :code
                                /**
                                 * Module dependencies.
                                 */

                                var express = require('express');
                                var routes = require('./routes');
                                var user = require('./routes/user');
                                var http = require('http');
                                var path = require('path');

                                var app = express();

                                // all environments
                                app.set('port', process.env.PORT || 3000);
                                app.set('views', path.join(__dirname, 'views'));
                                app.set('view engine', 'jade');
                                app.use(express.favicon());
                                app.use(express.logger('dev'));
                                app.use(express.json());
                                app.use(express.urlencoded());
                                app.use(express.methodOverride());
                                app.use(app.router);
                                app.use(require('stylus').middleware(path.join(__dirname, 'public')));
                                app.use(express.static(path.join(__dirname, 'public')));

                                // development only
                                if ('development' == app.get('env')) {
                                  app.use(express.errorHandler());
                                }

                                app.get('/', routes.index);
                                app.post('/', routes.index);
                                app.get('/users', user.list);


                                <mark>var server = </mark>http.createServer(app).listen(app.get('port'), function(){
                                    console.log('Express server listening on port ' + app.get('port'));
                                });

                                <mark>//Socket.IO
                                var buff = 0;
                                //Socket.IO読み込み
                                var io = require('socket.io').listen(server);
                                //ログレベル
                                io.set('log level', 1);
                                //Socket接続
                                io.sockets.on('connection', function(socket){
                                    //イベント受信
                                    socket.on('emit_del_img',function(data){
                                        if(buff != data){
                                            buff = data;
                                            console.log(buff);
                                        }   
                                    });
                                });</mark>
                        p /routes/index.js
                        pre(class='prettyprint linenums:1')
                            :code
                                /*
                                 * GET home page.
                                 */

                                exports.index = function(req, res){

                                    if(req.method == 'POST'){
                                       console.log('post')
                                    }
                                    
                                    res.render('index', {
                                        method: req.method,
                                        innerWidth: req.body.innerWidth,
                                        level: req.body.level
                                    });
                                };
                        p /views/index.jade
                        pre(class='prettyprint linenums:1')
                            :code
                                doctype
                                html(lang='ja')
                                    head
                                        meta(charset='UTF-8')
                                        meta(content='width=device-width, user-scalable=no', name='viewport')
                                        link(href='http://code.jquery.com/mobile/1.4.2/jquery.mobile-1.4.2.min.css', rel='stylesheet')
                                        script(src='http://code.jquery.com/jquery-1.9.1.min.js')
                                        script(src='http://code.jquery.com/mobile/1.4.2/jquery.mobile-1.4.2.min.js')
                                        <mark>script(src='/socket.io/socket.io.js')</mark>
                                        //script(src='http://localhost:3000/socket.io/socket.io.js')
                                        title ランダムイメージ
                                        style
                                            :stylus
                                                [data-role="content"]
                                                    position relative
                                                    height 480px
                                                [data-role="content"]
                                                    img
                                                        width 64px
                                                        height 64px
                                                        position absolute
                                        script
                                            :js
                                                $(document).on('pageshow','#index',function(){

                                                    <mark>var point = 0;
                                                    //Socket接続
                                                    var socket = io.connect();</mark>

                                                    $('input[type=button]').on('vclick',function(){
                                                        $('[name=innerWidth]').val(window.innerWidth);
                                                        $('form').submit();
                                                    });

                                                    //画像削除
                                                    $(document).on('vclick','#index img',function(){
                                                        <mark>point++;
                                                        //イベント送信
                                                        socket.emit('emit_del_img',point);</mark>
                                                        $(this).remove();
                                                    });
                                                    
                                                });
                                    body
                                        #index(data-role='page')
                                            div(data-role='header')
                                                h1 ランダムイメージ
                                            div(data-role='content')
                                                if(method=='GET')
                                                    form(method='POST',action='/')
                                                        fieldset(data-role='controlgroup')
                                                            legend レベル:
                                                            input#l1(checked='checked', name='level', type='radio', value='10')
                                                            label(for='l1') 10体
                                                            input#l2(name='level', type='radio', value='20')
                                                            label(for='l2') 20体
                                                            input#l3(name='level', type='radio', value='30')
                                                            label(for='l3') 30体
                                                        fieldset(data-role='controlgroup')
                                                            input(type='hidden',name='innerWidth')
                                                            input(type='button',value='スタート')
                                                else
                                                    -for(var i = 0; i < parseInt(level); i++)
                                                        -var top = Math.floor(Math.random() * (480-64));
                                                        -var left = Math.floor(Math.random() * (innerWidth-64));
                                                        img(src='images/kumamon.gif',alt='',style='top:#{top}px;left:#{left}px;')
                                            div(data-position='fixed', data-role='footer')
                                                h1 フッター