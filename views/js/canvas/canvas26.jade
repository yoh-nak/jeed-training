!!!
html(lang='ja')
	head
		meta(name='viewport',content='width=device-width,initial-scale=1.0')
		link(href='css/bootstrap.min.css',rel='stylesheet',media='screen')
		link(href='js/dtree/dtree.css', rel='stylesheet', media='screen')
		link(href='less/common.less',rel='stylesheet',media='screen')
		link(href='js/google-code-prettify/prettify.css',rel='stylesheet',media='screen')
		title=title
	body
		include navbar.jade
		div.container
			div.row
				div.col-sm-3
					include left.jade
				div.col-sm-9
					div.panel.panel-primary
						div.panel-heading
							i.glyphicon.glyphicon-book
							&nbsp;円周に沿ったアニメーション
						div.panel-body
							h4 円周に沿ったアニメーション
							p
								a.btn.btn-default(href='demo/canvas/exercise4/index9.html',target='_blank')
									i.glyphicon.glyphicon-play
									| デモ
							pre.prettyprint.linenums
								| &lt;!DOCTYPE html&gt;
								| &lt;html lang="ja"&gt;
								|   &lt;head&gt;
								|     &lt;meta charset="utf-8"&gt;
								|     &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
								|     &lt;title&gt;&lt;/title&gt;
								|     &lt;style&gt;
								|       #myCanvas{
								|        display:block;
								|       }
								|     &lt;/style&gt;
								|   &lt;/head&gt;
								|   &lt;body&gt;
								|     &lt;canvas id="myCanvas" width="500" height="500"&gt;&lt;/canvas&gt;
								|     &lt;button id="startAnimation"&gt;Start&lt;/button&gt;
								|     &lt;button id="stopAnimation"&gt;Stop&lt;/button&gt;
								|     &lt;script src="http://code.jquery.com/jquery-1.10.2.min.js"&gt;&lt;/script&gt;
								|     &lt;script&gt;
								|       $(function(){
								|        //キャンバス要素　jQueryオブジェクト
								|        var canvas = $('#myCanvas');
								|        
								|        //2Dレンダリングコンテキスト
								|        var context = canvas.get(0).getContext('2d');
								|        
								|        var canvasWidth = canvas.width(); //キャンバス要素　幅
								|        var canvasHeight = canvas.height(); //キャンバス要素　高さ
								|        
								|        var playAnimation = true; //アニメーションフラグ　開始
								|        
								|        //スタート／ストップボタン　jQueryオブジェクト
								|        var startButton = $('#startAnimation');
								|        var stopButton = $('#stopAnimation');
								|        //スタートボタン初期表示削除
								|        startButton.hide();
								|        
								|        //スタートボタンクリック
								|        startButton.click(function(){
								|         $(this).hide(); //スタートボタン非表示
								|         stopButton.show(); //ストップボタン表示
								|         
								|         playAnimation = true; //アニメーションフラグ　開始
								|         animate(); //アニメーション開始
								|        });
								|        
								|        //ストップボタンクリック
								|        stopButton.click(function(){
								|         $(this).hide(); //ストップボタン非表示
								|         startButton.show(); //スタートボタン表示
								|         
								|         playAnimation = false; //アニメーションフラグ　停止
								|        });
								|        //矩形（x座標, y座標, 幅, 高さ, 回転時の半径, 回転時の角度）をまとめて管理するクラス
								|        var Shape = function(x, y, width, height) {
								|         this.x = x;
								|         this.y = y;
								|         this.width = width;
								|         this.height = height;
								|         this.radius = Math.random()*30; //半径0-30の乱数
								|         this.angle = 0;
								|        };
								|        //複数の矩形を格納する配列
								|        var shapes = new Array();
								|        //矩形の設定を10個準備
								|        for (var i = 0; i &lt; 10; i++) {
								|         var x = Math.random()*250;
								|         var y = Math.random()*250;
								|         var width = height = Math.random()*30;
								|         //矩形（x座標, y座標, 幅, 高さ）を管理するクラスを矩形ごとに配列に格納
								|         shapes.push(new Shape(x, y, width, height));
								|        };
								|        //アニメーションループ
								|        function animate() {
								|         //矩形クリア
								|         context.clearRect(0, 0, canvasWidth, canvasHeight);
								|         var shapesLength = shapes.length; //矩形の個数
								|         
								|         //矩形の個数だけ描画
								|         for(var i = 0; i &lt; shapesLength; i++) {
								|          var tmpShape = shapes[i];
								|          //それぞれの矩形のx座標を算出
								|          var x = tmpShape.x+(tmpShape.radius*Math.cos(tmpShape.angle*(Math.PI/180)));
								|          //それぞれの矩形のy座標を算出
								|          var y = tmpShape.y+(tmpShape.radius*Math.sin(tmpShape.angle*(Math.PI/180)));
								|          //角度を5度ずつ増加
								|          tmpShape.angle += 5;
								|          
								|          //角度が360度を超えたら0度に戻す
								|          if (tmpShape.angle &gt; 360) {
								|           tmpShape.angle = 0; 
								|          };         
								|          //矩形描画
								|          context.fillRect(x, y, tmpShape.width, tmpShape.height);
								|         };
								|         //アニメーションフラグが開始のとき
								|         if(playAnimation) {
								|          setTimeout(animate, 33);
								|         };
								|        };
								|        //アニメーション初回スタート
								|        animate();
								|       });
								|     &lt;/script&gt;
								|   &lt;/body&gt;
								| &lt;/html&gt;
		div#footer=title
		script(src='http://code.jquery.com/jquery.js')
		script(src='js/google-code-prettify/prettify.js')
		script.
			prettyPrint();
		script(src='js/bootstrap.min.js')
		script(src='js/list-counter.js')