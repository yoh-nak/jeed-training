<%- include ../../head %>
  <body>
 
    <%- include navbar %>

    <div class="container">
      <div class="row">
        <div class="col-sm-3">

        <%- include left %>
        
        </div>
        <div class="col-sm-9">
          <div class="panel panel-primary">
          <div class="panel-heading">Ajaxとは</div>
          <div class="panel-body">
          <h4>Ajaxとは</h4>
<pre>
近年、JavaScritが再び注目されるようになった理由には、Ajax（Asynchronous JavaScript + XML: 非同期なJavaScriptとXML）の流行があります。AjaxはJavaScriptによる非同期通信を利用して、Webページの一部を動的に書き換えることを可能とする技術です。

JavaScriptによる非同期通信自体は以前から存在する技術でしたが、これらの技術を利用したGoogle MapなどのWebサービスが公開されたことと、2005年にこれらの技術に対して「Ajax」という名称が与えられたことをきっかけに、高機能なWebアプリケーションの開発を可能にする言語として、JavaScriptに注目が集まるようになりました。この頃にXMLやDOMなどのWeb関連技術の標準化が進んだことも、Ajaxの普及とJavaScriptの再評価の一因となっています。

Ajaxを利用したWebアプリケーションとして有名なものには、前述のGoogle MapやGoogle Calendar、Gmailなど、Google社が提供する一連のサービスがあります。非同期通信により、ページの遷移を行わずにコンテンツの更新が可能となったことで、デスクトップアプリケーションのような操作性が実現されています。
</pre>

<h4>非同期通信とは</h4>

<pre>
Ajaxで行われる非同期通信とは、どのようなものでしょうか？ここでは、非同期通信と反対の仕組みを持つ同期通信との違いを見てみましょう。
</pre>

<h4>同期通信</h4>

<pre>
データの通信を行う際、リクエスト（要求）に対するレスポンス（応答）を受け取るまで受信側が他の操作を行わない通信方法です。このため、大量のデータを同期通信で受信すると、ユーザーは受信が完了するまで長時間待たされることになり、その間は他の作業ができなくなります。
</pre>

<h4>非同期通信</h4>

<pre>
データの受信側はリクエストを送った後、送信側からレスポンスが返るまでの間に他の処理を行うことができ、レスポンスが返ると受信処理を実行します。このため、大量のデータを非同期通信で受信すると、ユーザーは受信完了するまでに長時間を待つことなく、受信したところからデータを利用することも可能となります。

たとえば、Google Mapでは、最初に読み込んだ地図をマウスカーソルで動かして周辺の地図を表示できます。その際、先に読み込んだWebページからさらにリクエストを送信し、Webページを再読み込みすることなく追加のデータを受信する非同期通信が行われているのです。
</pre>
          </div>
          </div>
        </div>
      </div>
    </div>
    </div>

    <div id="footer"><%= title %></div>
 
    <script src="http://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="js/google-code-prettify/prettify.js"></script>
    <script>prettyPrint();</script>
    <script src="js/bootstrap.min.js"></script>
    <script src="coffee/list-counter.js"></script>

  </body>
</html>