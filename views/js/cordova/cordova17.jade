extends ../../layout

block link
    link(href='../../css/bootstrap.min.css',rel='stylesheet',media='screen')
    link(href='../../js/dtree/dtree.css', rel='stylesheet', media='screen')
    link(href='../../css/style.css',rel='stylesheet',media='screen')
    link(href='../../js/google-code-prettify/prettify.css',rel='stylesheet',media='screen')

block content
    include navbar
    .container
      .row
        .col-sm-3
          include left
        .col-sm-9
          .panel.panel-primary
            .panel-heading プラグインの実装
            .panel-body
                .alert.alert-info Android向けのCordovaプラグインを実装する
                p アプリの要件によっては、自分が利用したいネイティブの機能のCordovaプラグインがあるとは限りません。また、機能面に限らずパフォーマンスや原理的にHTML5の実装が難しい場合などにも、Cordovaプラグインを実装して、特定の画面のみをネイティブで記述するというようなことが必要になります。
                p Cordovaフレームワークでは、あらかじめ誰でもプラグインを実装できるように設計されています。簡単なプラグインであれば短時間ですぐに実装できます。
                p まず、Androidプロジェクト向けのCordovaプラグインを実装する手順を紹介します。
                ol
                    li config.xmlを編集して、プラグインに関する情報を追加する
                    li Javaでプラグインのコードを記述する
                    li JavaScriptからプラグインのコードを呼び出す
                p これらの作業は、Android用のプロジェクトであるplatforms/androidディレクトリ以下で行います。ネイティブ側のコードをJavaで記述するので、Eclipseを起動してAndroidのプロジェクトを開いてください。
                .alert.alert-info config.xmlを編集して、プラグインに関する情報を追加する
                .alert.alert-info Javaでプラグインのコードを記述する
                .alert.alert-info JavaScriptからプラグインのコードを呼び出す
                .alert.alert-info Android向けのプラグイン開発の詳細
                p 
                .alert.alert-info iOS向けのCordovaプラグインを実装する
                p 
                .alert.alert-info cordovaコマンドからインストールできるプラグインを実装する
                p 
