extends ../layout

block link
    link(href='../css/bootstrap.min.css',rel='stylesheet',media='screen')
    link(href='../css/bootstrap-theme.min.css',rel='stylesheet',media='screen')
    link(href='../js/dtree/dtree.css', rel='stylesheet', media='screen')
    link(href='../css/style.css',rel='stylesheet',media='screen')
    link(href='../js/google-code-prettify/prettify.css',rel='stylesheet',media='screen')

block content
    include navbar
    .container
        .row
            .col-sm-3
                include left
            .col-sm-9
                .panel.panel-primary
                    .panel-heading
                        i.glyphicon.glyphicon-book
                        | &nbsp;資料
                    .panel-body
                        pre
                            :code

                                レスポンシブWebデザイン実例


                                W3C
                                http://www.w3.org/



                                A List Apart
                                http://alistapart.com/article/responsive-web-design



                                The Next Web
                                http://thenextweb.com/
                                Microsoft
                                http://www.microsoft.com/
                                TIME
                                http://www.time.com/time/
                                SONY
                                http://sony.jp


                                Starbucks
                                http://www.starbucks.com/


                                アンデルセングループ
                                http://www.andersen-group.jp/


                                PSS
                                http://www.pss4kids.com/
                                Stoppress
                                http://www.stoppress.co.nz/
                                Japi Blog
                                http://blog.japijane.cl/
                                Lancaster University
                                http://www.lancs.ac.uk/
                                137 pillars house
                                http://137pillarshouse.com/
                                lane packaging
                                http://www.lanepackaging.com/
                                authentic jobs
                                http://www.authenticjobs.com/
                                deren keskin
                                http://www.deren.me/
                                Adobe HTML5 特設サイト
                                http://adobe-html5.jp/
                                Stink Digital
                                http://stinkdigital.com
                                Nathan Sawaya
                                http://brickartist.com/
                                CouchDB
                                couchdb.apache.org
                                Rachel Nabors
                                rachelnabors.com
                                Lucio Piunti
                                www.luciopiunti.it
                                Folksy
                                http://folksy.com

                                KANAYAホテル
                                http://www.kinugawakanaya.com



                                RWDポータルサイト

                                Media Queries
                                http://mediaqueri.es

                                RWDJP
                                http://responsive-jp.com/





                                メディアクエリーの指定方法

                                link要素を利用する場合
                        pre
                            :code
                                <link rel="stylesheet" href="desktop.css" media="[not|only] メディアタイプ [and] (デバイスの条件)">
                        pre
                            :code


                                @mediaを利用する場合

                        pre
                            :code
                                @media [not|only] メディアタイプ [and] (デバイスの条件) {

                                }
                        pre
                            :code



                                not・・・のみではない
                                only・・・のみ
                                and・・・のみかつ


                                効率のいいメディアクエリーの書き方



                                すべてのデバイスに共通の設定

                                320px以上の指定
                        pre
                            :code
                                @media screen and (min-width:480px) {
                                     /*480px以上の指定*/
                                }

                                @media screen and (min-width:768px) {
                                     /*768px以上の指定*/
                                }

                                @media screen and (min-width:1024px) {
                                     /*1024px以上の指定*/
                                }

                                @media screen and (min-width:1200px) {
                                     /*1200px以上の指定*/
                                }

                        pre
                            :code




                                media queryを認識させる

                                css3-mediaqueries.js
                                https://code.google.com/p/css3-mediaqueries-js/

                        pre
                            :code
                                <!--[if lt IE 9]>
                                <script src="js/css3-mediaqueries.js"></script>
                                <![endif]-->
                                responds.js
                                https://github.com/scottjehl/Respond

                                <!--[if lt IE 9]>
                                <script src="js/respond.js"></script>
                                <![endif]-->

                        pre
                            :code


                                デザイニングインブラウザー補助ツール

                                グリッド画像生成

                                giriddle.it
                                http://griddle.it/

                                http://griddle.it/[グリッドの全体幅]-[カラム数]-[ガーターの横幅]?color=f0f&background=yellow&text=black


                                ダミー画像の表示

                                PlaceIMG
                                http://placeimg.com/

                                http://placeimg.com/[横幅]/[縦幅]/[カテゴリー]/[フィルター]

                                カテゴリー
                                any・・・無指定
                                animal・・・動物
                                arch・・・建築物
                                nature・・・自然
                                people・・・人物
                                tech・・・テクノロジー

                                フィルター

                                any・・・無指定
                                grayscale・・・白黒
                                sepia・・・セピア色

                                http://placeimg.com/480/200/any

                                http://placeimg.com/800/320/people/grayscale


                                ベースグリッドを表示するブックマークレット

                                Baseliner

                                http://keyes.ie/things/baseliner/


                                ブラウザーの情報がわかる

                                MQtest.js

                                http://mqtest.io/


                                レスポンシブの表示テスト

                                .ish

                                http://bradfrostweb.com/demo/ish/






                                CSS3プロパティをIE8以下に認識させる
                                =============================
                                html5、css3両方使う場合はhtml5shivを使わずにこちらを使う

                        pre
                            :code
                                <!--[if lt IE 9]>
                                <script src="http://ie7-js.googlecode.com/svn/version/2.1(beta4)/IE9.js"></script>
                                <![endif]-->


                        pre
                            :code
                                IE7以下でフルードイメージを実装する
                                =============================
                                imgsizer.js
                                http://webscripts.softpedia.com/script/Image-Galleries/Image-Tools/imgSizer-js-68426.html
                        pre
                            :code
                                <!--[if lt IE 7.0]>
                                <script src="js/imgsizer.js"></script>
                                <![endif]-->
                        pre
                            :code
                                レスポンシブWebデザイン%値算出
                                =========================
                                子要素の%値 = 変更する要素の固定値 = 親要素の固定値 x 100
                                = 800px / 1024px * 100
                                = 78.125%
                                padding:10px;
                                10px / 1024px x 100 = 0.9765625%
                                margin:12px;
                                12px / 1024px x 100 = 1.171875%
                                width:800px;
                                800px / 1024px x 100 = 78.125%

                                メディアクエリー
                                =============
                                @media (only) メディアタイプ and/not (max-height:480px){...}
                                メディアクエリー順番
                                ================
                                小さい幅から順に記述するのが要領が良い
                                ブレイクポイント1.共通およびスマホ
                                ブレイクポイント2.タブレット
                                @media only screen and (min-width:481px){...}
                                ブレイクポイント3.パソコン
                                @media only screen and (min-width:769px){...}

                                linkタグを使う場合
                                <link rel="stylesheet" href="style.css" media="only screen">
                                <link rel="stylesheet" href="style.css" media="only screen and (min-width:481px)">
                                <link rel="stylesheet" href="style.css" media="only screen and (min-width:769px)">

                                @importを使う場合
                                @import url("style-pc") only screen;
                                @import url("style-pc") only screen and (min-width:481px);
                                @import url("style-pc") only screen and (min-width:769px);


                                メディアクエリー仕様
                                ================
                                http://www.w3.org/TR/2012/REC-css3-mediaqueries-20120619/
                                http://standards.mitsue.co.jp/resources/w3c/TR/css3-mediaqueries/


                                メディアタイプ
                                ===========
                                all
                                     すべてのメディア
                                screen
                                     スクリーン
                                print
                                     印刷
                                handheld
                                     モバイル機器
                                projection
                                     プロジェクター
                                tv
                                     テレビ
                                tty
                                     文字幅固定のデバイス
                                braille
                                     点字ディスプレイ
                                embosed
                                     点字プリンタ
                                speech
                                     音声


                                メディアクエリーで使える特性
                                =======================

                                width（ビューポートの横幅）
                                min-width
                                max-width
                                     数値

                                height（ビューポートの高さ）
                                min-height
                                max-height
                                     数値

                                ------------------------------------------------

                                device-width（スクリーンの横幅）
                                min-device-width
                                max-device-width

                                device-height（スクリーンの高さ）
                                min-device-height
                                max-device-height


                                orientation（ビューポートの向き）
                                     portrait, landscape

                                aspect-ratio（ビューポートの縦横比）
                                min-aspect-ratio
                                max-aspect-ratio
                                     縦横比（1/1等で指定）

                                device-aspect-ratio（スクリーンの縦横比）
                                min-device-aspect-ratio
                                max-device-aspect-ratio
                                     縦横比（16/9等で指定）

                                color（各色のビット数）
                                min-color
                                max-color
                                     整数（省略可）

                                color-index（カラーテーブルのエントリ数）
                                min-color-index
                                max-color-index
                                     整数（省略可）

                                monochrome（階調のビット数）
                                min-monochrome
                                max-monochrome
                                     整数（省略可）

                                resolution（解像度）
                                     解像度（単位dpi, dpcm）

                                scan（捜査方式）
                                     progressive, interlace

                                grid（tty端末などのグリッドベースのデバイス）
                                     0, 1

                                -webkit-device-pixel-ratio（devicePixelRatioの値）
                                -moz-device-pixel-ratio
                                -o-device-pixel-ratio
                                -webkit-min-device-pixel-ratio
                                min--moz-device-pixel-ratio
                                -o-min-device-pixel-ratio
                                -webkit-max-device-pixel-ratio
                                max--moz-device-pixel-ratio
                                -o-max-device-pixel-ratio
                                      数値





                                devicePixcelRatio = density
                                =====================
                                http://d.hatena.ne.jp/ksrtmyk/20110522/1306038375

                                densityに基づいたdpi（devicePixcelRatioに基づいたビュートーボートの解像度）

                                     =　デバイスの画面解像度　÷　デバイスに設定されたdevicePixcelRatio

                                見た目の大きさ（インチ）
                                     = 記事の横幅（ピクセル）　÷　densityに基づいたdpi
                                RetinaディスプレイのiPhone4/4Sは
                                devicePixcelRatio = 2
                                ↓
                                CSSで指定するpixelは「640x960」/2の「320x480」
                                Xperia arcは
                                devicePixcelRatio = 1.5
                                ↓
                                CSSで指定するpixelは「480x854」/1.5の「320x569.33333....」
                                image-set（iOSのみ）
                                ==================
                                E{
                                -webkit-image-set(url(低解像度画像のパス) 1x, url(高解像度画像のパス) 2x);
                                }
                                device-pixel-ratio
                                ==================
                                iPhone3GS以前、低解像度Android、device-pixel-ratio非対応Android
                                E{
                                background:url(低解像度画像のパス);
                                width:100px;
                                height:100px;
                                }
                                Androidのdevice-pixel-ratio対応端末
                                @media only screen and (-webkit-min-device-pixel-ratio: 1.5),
                                only screen and (min-device-pixel-ratio: 1.5){
                                E{
                                background:url(中解像度画像のパス);
                                width:100px;
                                height:100px;
                                -webkit-background-size:100px;
                                }
                                }
                                iPhone4以降、Androidのdevice-pixel-ratio対応端末
                                @media only screen and (-webkit-min-device-pixel-ratio: 2),
                                only screen and (min-device-pixel-ratio: 2){
                                E{
                                background:url(高解像度画像のパス);
                                -webkit-background-size:100px 100px;
                                background-size:100px 100px;
                                }
                                }

                                devicePixcelRatio取得
                                =====================
                                console.log(window.devicePixelRatio);
                                devicePixcelRatio一覧
                                =====================
                                http://blog.webcreativepark.net/2011/01/25-173502.html




                                レスポンシブWebデザインツール



                                Viewport Resizer（ブックマークレット）
                                http://lab.maltewassermann.com/viewport-resizer/

                                Responsive Design Bookmarklet（ブックマークレット）
                                http://responsive.victorcoulon.fr/

                                Adobe Edge Reflow
                                http://html.adobe.com/jp/edge/reflow/
                                Responsify
                                http://responsify.it/
                                Responsive Web Design Sketch Sheets
                                http://jeremypalford.com/arch-journal/responsive-web-design-sketch-sheets
                                Responsivator
                                http://dfcb.github.io/Responsivator/

                                Resizer（Chromeアプリ）
                                https://chrome.google.com/webstore/detail/resizer/gekhbemhcekbaodnijabeajoeolfplbp?utm_source=chrome-ntp-icon

                                responsiVew（Chromeアプリ）

                                responsive Tester（Chromeアプリ）

                                Responsive Site View（Chromeアプリ）

                                responsive-web-design（Chromeアプリ）

                                Responsive Window（Chromeアプリ）

                                Firefoxレスポンシブデザインビュー
                                ツール>Web開発>レスポンシブデザインビュー




                                モバイルファースト


                                Mobile First
                                http://all-web.org/ala/organizing-mobile/
                                MobileFirst.jp
                                http://www.mobile-first.jp/
                                LukeW Ideation + Design
                                http://ww.lukew.com/