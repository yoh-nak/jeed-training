extends ../layout

block link
    link(href='../css/bootstrap.min.css',rel='stylesheet',media='screen')
    link(href='../css/bootstrap-theme.min.css',rel='stylesheet',media='screen')
    link(href='../js/dtree/dtree.css', rel='stylesheet', media='screen')
    link(href='../css/style.css',rel='stylesheet',media='screen')
    link(href='../js/google-code-prettify/prettify.css',rel='stylesheet',media='screen')

block content
    include navbar
    .container
        .row
            .col-sm-3
                include left
            .col-sm-9
                .panel.panel-primary
                    .panel-heading
                        i.glyphicon.glyphicon-book
                        | &nbsp;レスポンシブWebデザインとは
                    .panel-body
                        pre.
                            レスポンシブWebデザインの背景

                            レスポンシブWebデザインが注目される背景は、スマートフォンです。スマートフォンの急速な普及により、Webサイトの制作現場では、パソコン向けの従来型のWebサイトに加えて、スマートフォンの小さな画面でも見やすいようにデザインされた、専用のWebサイトである「スマートフォンサイト」が登場しました。

                            ”振り分け型”スマートフォン対応の課題

                            スマートフォンサイトでは、ユーザーエージェントで振り分けることで多くのデバイスやスクリーンサイズに対応する方法が採られることがあります。JavaScriptやサーバーサイドでユーザーエージェント（UA）情報を読み出し、デバイスの種類に応じて用意した専用のWebページ（HTML）へ移動させるのです。
                            こうしたスマートフォン対応は、デバイスごとに最適化されたWebサイトをユーザーに提供できるのがメリットですが、おもに4つの問題が指摘されています。

                            ①開発コストの増加

                            あらゆる端末の解像度、スクリーンサイズ、OS、UA情報を調査して、それぞれに適したHTMLやCSSを用意するにはコストがかかります。
                            2013年6月現在、国内で発売されているスマートフォンのOSには「iOS」「Android OS」「Windows Phone」の3つがあり、それぞれ搭載しているブラウザーが異なります。解像度やスクリーンサイズは端末ごとに異なるうえ、スマートフォンにはポートレートモード（縦置き）とランドスケープモード（横置き）があるので、単純にいえば100種類の端末があれば200種類のスクリーンサイズに対応しなければなりません。
                            OSや端末が頻繁にバージョンアップされる現状では、調査するためのコスト、それらを反映するためのコストも決して低いものではありません。また、一部のスマートテレビのように、メーカーによってUA情報が開示されていないデバイスもあります。

                            ②煩雑なファイルの更新

                            たとえば、HTMLファイルが振り分けるための端末ごとに5種類あった場合、画像を1つ更新するたびに5つのHTMLを更新しなければなりません。また、画像サイズや解像度などの細かい指定が必要であれば、更新作業はさらに煩雑になります。

                            ③CMS対応のリスク

                            CMS（Content Management System）の機能を使って端末ごとにページを振り分けている場合、CMSが新しい端末に対応するまで待たなければなりません。すばやく新端末に対応したいときには制約になる場合があります。


                            ④URLの分散

                            ソーシャルメディアなどで紹介されたリンクが、”iph”や”mobile.サブドメイン”といったスマートフォン用のドメイン、”/m/ディレクトリ”のようなスマートフォン用のディレクトリであった場合、PCから適切にアクセスできないかもしれません。また、Googleアナリティクスなどのアクセス解析ツールでは、URLごとにレポートが分かれてしまい、解析に時間や人数が必要になります。

                            このように振り分けによる端末別対応には、現状でも多くの問題があります。さらに、今後はパソコンやスマートフォン、タブレットに加えて、スマートテレビ、カーナビゲーション、冷蔵庫や洗濯機、電子レンジなどのあらゆるエレクトロニクス製品がWebにアクセスできるようになるでしょう。
                            端末が増えるたびに、解像度、スクリーンサイズ、OS、UA情報を調査し、新しいHTMLとCSS、対応する画像データを作成する手法は、将来にわたっても時間と労力の増加＝コスト増を招く手法だと言わざるを得ないでしょう。


                            レスポンシブWebデザインによる解決

                            こうしたさまざまな課題を解決する手法として注目されているのが、レスポンシブWebデザインです。レスポンシブWebデザインは、米国のデザイナー、イーサン・マルコッテ（Ethan Marcote）氏が2010年5月に技術系のブログ「A List Apart（ア・リスト・アパート）」に投稿した記事で発表されました。

                            マルコッテ氏は、2009年にW3C（World Wide Web Consortium）のWebサイトをレスポンシブWebデザインでリニューアルしたコンサルティングファーム「Happy Cog」の元メンバーでもあります。2009年には、マルコッテ氏のブログ「Unstoppable Robot Ninja」で、レスポンシブWebデザインの核となる「フルードイメージ」と呼ばれる技術を紹介しています。

                            OSやデバイスをUAで判別してそれぞれのサイトへ振り分けるアプローチに対して、レスポンシブWebデザインでは、あらゆるデバイスに対して単一のWebページ（HTML）を使い、スクリーンサイズ（画面幅）を基準にCSSだけを切り替えてレイアウトを調整します。小さいスクリーンに対しては小さいスクリーンで見やすく操作しやすいレイアウトを、大きいスクリーンに対しては大きいスクリーンに適したレイアウトを提供します。

                            レスポンシブWebデザインが注目されるのは、「シンプリシティ（simplicity＝簡潔さ）にあります。単一のHTMLを用意すればいいのでメンテナンスの負担が少なく、スクリーンサイズだけを基準にしてレイアウトを変更するため、新しいOSやデバイスが登場してもHTMLを修正する必要はありません。
                            異なる複数のスクリーンサイズに対してひとつのHTMLで対応できるレスポンシブWebデザインは、さまざまなスクリーンサイズとOSを搭載したモバイル端末に対応するシンプルな方法なのです。
