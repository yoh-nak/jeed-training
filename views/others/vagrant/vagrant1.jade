extends ../../layout

block link
	link(href='../../css/bootstrap.min.css',rel='stylesheet',media='screen')
	link(href='../../css/bootstrap-theme.min.css',rel='stylesheet',media='screen')
	link(href='../../js/dtree/dtree.css', rel='stylesheet', media='screen')
	link(href='../../css/style.css',rel='stylesheet',media='screen')
	link(href='../../js/google-code-prettify/prettify.css',rel='stylesheet',media='screen')

block content
	include ../navbar
	.container
		.row
			.col-sm-3
				include ../left
			.col-sm-9
				.panel.panel-primary
					.panel-heading
						i.glyphicon.glyphicon-book
						| &nbsp;資料
					.panel-body
						p
							| Vagrant 公式サイト
							br
							a(href='http://www.vagrantup.com/',target='_blank')
								| http://www.vagrantup.com/
						hr
						pre
							:code
								vagrant 公式サイト
								http://www.vagrantup.com/

								=============================

								BOX（テンプレート）取得
								vagrant box add precise32 \
								http://files.vagrantup.com/precise32.box

								仮想OS用ディレクトリ作成
								cd ~
								mkdir myPrecise32VM
								cd myPrecise32VM

								Vagrant設定ファイル生成
								vagrant init precise32

								仮想OSインストール
								vagrant up

								=============================

								状態
								vagrant status

								スリープ
								vagrant suspend

								復帰
								vagrant resume

								終了
								vagrant halt

								起動
								vagrant up

								再起動
								vagrant reload

								仮想マシン削除
								vagrant destloy

								=============================

								接続
								vagrant ssh

								=============================

								LANで仮想環境にアクセス可能にする

								CentOSの場合

								IPv4のファイヤーウォールを無効にする
								sudo service iptables save
								sudo service iptables stop
								sudo chkconfig iptables off

								IPv6のファイヤーウォールを無効にする
								sudo service ip6tables save
								sudo service ip6tables stop
								sudo chkconfig ip6tables off

								Ubuntuの場合

								ファイヤーウォールを無効にする

								sudo iptables -X
								sudo iptables -t nat -F
								sudo iptables -t nat -X
								sudo iptables -t mangle -F
								sudo iptables -t mangle -X
								sudo iptables -P INPUT ACCEPT
								sudo iptables -P FORWARD ACCEPT
								sudo iptables -P OUTPUT ACCEPT
								sudo ufw disable

								=============================

								仮想環境を抜ける
								exit

								=============================

								Vagrantfileを編集
								config.vm.network :private_network, ip: "192.168.33.10"

								Vagrant再起動
								vagrant reload

								Vagrant接続
								vagrant ssh

								=============================

								共有フォルダ

								仮想マシンの/vagrant = Macの~/myPrecise32VM

								Webサーバーのドキュメントルートと共有フォルダをリンク
								sudo -rf /var/www/html
								sudo ln -fs /vagrant /var/www/html

								=============================

								node.jsインストール
								gcc、g++必要
								sudo apt-get install gcc g++

								sudo apt-get update
								sudo apt-get install git-core git scons build-essential scons libpcre++-dev xulrunner-dev libboost-dev libboost-program-options-dev libboost-thread-dev libboost-filesystem-dev

								wget http://nodejs.org/dist/v0.10.25/node-v0.10.25.tar.gz
								tar -zxf node-v0.10.25.tar.gz
								cd node-v0.10.25
								./configure
								make
								sudo make install


								npm install -g express jade stylus nib coffee-script hotnode forever grunt-cli js2coffee http-proxy

								=============================
								git インストール
								sudo apt-get install git

								ベアリポジトリ
								cd ~
								mkdir myapp.git
								cd myapp.git
								git --bare init --shared

								#git --bare init
								#git init --bare --shared=0640 myapp.git
								#git init --bare --shared=true myapp.git


								/*
								sudo vim ~/myapp.git/hooks/pre-receive

								#!/bin/sh
								echo "Stop myapp service"
								service myapp stop

								sudo chmod +x /home/vagrant/myapp.git/hooks/pre-receive
								*/


								sudo vim ~/myapp.git/hooks/post-receive

								/*
								#!/bin/sh
								echo "Checkout the Files"
								GIT_WORK_TREE=/home/vagrant/myapp.git git checkout -f
								echo "start service"
								service nsmag start
								*/

								#!/bin/sh
								GIT_WORK_TREE=/home/vagrant/myapp
								export GIT_WORK_TREE
								git checkout -f


								sudo chmod +x /home/vagrant/myapp.git/hooks/post-receive


								=============================

								ローカルリポジトリ
								git config --global user.name "Yohsuke Nakano"
								git config --global user.email hoge@sample.com

								.gitignoreに記述
								.DS_Store
								node_modules

								git init
								git add .
								git commit -m "first commit"

								=============================

								リモートリポジトリへのプッシュ

								git remote add origin vagrant@192.168.33.10:/home/vagrant/myapp.git
								git push -u origin master


								マニュアル
								http://www.saturngod.net/deploy-node-js-website-with-git
								http://stackoverflow.com/questions/9132144/how-can-i-automatically-deploy-my-app-after-a-git-push-github-and-node-js
						hr
						pre
							:code
								ドットインストール
									
								Vagrant門
								http://dotinstall.com/lessons/basic_vagrantt

