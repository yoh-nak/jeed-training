include ../../head.jade
    body
        include navbar.jade
        div.container
            div.row
                div.col-sm-3
                    div.list-group
                        a.list-group-item(href='canvas35.jade')
                              i.badge.badge-info
                              | コア機能を準備する
                        a.list-group-item(href='canvas36.jade')
                              i.badge.badge-info
                              | 画面を飾る
                        a.list-group-item(href='canvas37.jade')
                              i.badge.badge-info
                              | JavaScriptの準備をする
                        a.list-group-item(href='canvas38.jade')
                              i.badge.badge-info
                              | ユーザーインターフェースをアクティブにする
                div.col-sm-9
                    div.panel.panel-primary
                        div.panel-heading JavaScriptの準備をする
                        div.panel-body
                            h4 JavaScriptの準備をする
                            p ゲームの論理を考える前に、JavaScriptのコア機能の準備をする必要があります。
                            p game.jsという新しいドキュメントを作り、HTML、CSSファイルと同じディレクトリに格納します。そして、次のコードを書き込みます。
                            p
                                a.btn.btn-default(href='demo/canvas/exercise6/index2.html',target='_blank')
                                    i.glyphicon.glyphicon-play
                                    | デモ
                            pre.prettyprint.linenums
                                | $(function() {
                                |   
                                |   var canvas = $('#gameCanvas');
                                |   var context = canvas.get(0).getContext('2d');
                                |   
                                |   //キャンバスのサイズ
                                |   var canvasWidth = canvas.width();
                                |   var canvasHeight = canvas.height();
                                |   
                                |   //ゲームの設定
                                |   var playGame;
                                |   
                                |   //ゲームをリセット、開始する
                                |   function startGame() {
                                |       //ゲームの初期設定をする
                                |       playGame = false;
                                |               
                                |       //アニメーションループを開始する
                                |       animate();
                                |   }
                                |   
                                |   //ゲームの初期化をする
                                |   function init() {
                                | 
                                |   }
                                |   
                                |   //アニメーションループ
                                |   function animate() {        
                                |       //クリア
                                |       context.clearRect(0, 0, canvasWidth, canvasHeight);
                                |       
                                |       if (playGame) {
                                |           //33ミリ秒後に再びアニメーションを実行する
                                |           setTimeout(animate, 33);
                                |       }
                                |   }
                                |   init();
                                | });
                            p いくつか新しい関数を使っていることを除き、コードのなかに目新しいものは一切ないはずです。最初の4つの変数は、ゲームのcanvas要素、2次元レンダリングコンテキストへのアクセス、2個のキャンバスサイズを格納します。第5の変数、playGameは宣言されていますが、実際に値が代入されるのはずっとあとです。この変数は、アニメーションループのコードを実行すべきかどうかを決めるために使われます。
                            p playGame関数は、プレイヤーがUIの「Play」、「Reset」、「Play Again」リンクをクリックしたときに、ゲームのリセット、開始のために使われるプレースホルダーです。現状では、startGame関数はplayGame変数をfalseにしてアニメーションが動かないようにしています。この関数はanimate関数も呼び出しています。animate関数は非常に基本的な30fpsのタイマーを実行していますが、まだそれ以外に何もしていません。最後の関数はinitで、ゲームが初めてロードされたときにゲームの初期設定をすべて行います。現在のinit関数は空ですが、準備中のJavaScriptの末尾部分で呼びだされます。
                            p これでコア機能は準備ができたので、もっと面白い部分に移りましょう。
        div#footer=title
        script(src='http://code.jquery.com/jquery.js')
        script(src='js/google-code-prettify/prettify.js')
        script.
            prettyPrint();
        script(src='js/bootstrap.min.js')
        script(src='js/list-counter.js')