enchant();

window.onload = function() {

  core = new Core(320, 320);
  core.fps = 16;
  core.keybind(88, 'a');

  core.preload('button.png', 'map1.png','chara0.png', 'chara5.png',
               'avatarBg1.png','avatarBg2.png','avatarBg3.png',
               'monster/monster1.gif', 'monster/monster2.gif',
               'monster/monster3.gif' ,'monster/monster4.gif',
               'monster/monster5.gif', 'monster/monster6.gif',
               'monster/monster7.gif', 'monster/bigmonster1.gif',
               'monster/bigmonster2.gif', 'end.png');

  core.onload = function() {

    // マップを作成する
    var map = new Map(16, 16);
    map.image = core.assets['map1.png'];
    map.loadData(town.bg1, town.bg2);
    map.collisionData = town.collisionData;
    // フォアグラウンドマップを作成する
    var foregroundMap = new Map(16, 16);
    foregroundMap.image = core.assets['map1.png'];
    foregroundMap.loadData(town.fg);
    
    var stage = new Group();
    stage.addChild(map);

    // プレイヤーを作成する
    var player = new Player(96, 152, map);
    stage.addChild(player);
    
    stage.addChild(foregroundMap);
    core.rootScene.addChild(stage);

    // rootSceneの「enterframe」イベントリスナ
    core.rootScene.addEventListener('enterframe', function(e) {
      // マップのスクロール処理
      var x = Math.min((core.width  - 16) / 2 - player.x, 0);
      var y = Math.min((core.height - 16) / 2 - player.y, 0);
      x = Math.max(core.width,  x + map.width)  - map.width;
      y = Math.max(core.height, y + map.height) - map.height;
      stage.x = x;
      stage.y = y;
    });

    // バーチャルパッドを作成する
    var pad = new Pad();
    pad.x = 0;
    pad.y = 220;
    core.rootScene.addChild(pad);

    // バーチャル「a」ボタンを作成する
    var btn = new Button(250, 250, 'a');
    core.rootScene.addChild(btn);

  }
  core.start();
}

// バーチャルボタンを作成するクラス
var Button = enchant.Class.create(enchant.Sprite, {
  initialize: function(x, y, mode) {
    enchant.Sprite.call(this, 50, 50);
    this.image = core.assets['button.png'];
    this.x = x;
    this.y = y;
    this.buttonMode = mode; // ボタンモード
  }
});

// プレイヤーを作成するクラス
var Player = enchant.Class.create(enchant.Sprite, {
  initialize: function(x , y, map) {
    enchant.Sprite.call(this, 32, 32);
    this.x = x;
    this.y = y;
    var image = new Surface(96, 128);
    image.draw(core.assets['chara5.png'], 0, 0, 96, 128, 0, 0, 96, 128);
    this.image =image;
    this.isMoving = false; // 移動フラグ(移動中なら「true」)
    this.direction = 0;    // 向き
    // 歩行アニメーションの基準フレーム番号を保持するプロパティ
    this.walk = 0;
    // 攻撃アクション中のフレーム数を保持するプロパティ
    this.acount = 0;
    // 「enterframe」イベントリスナ
    this.addEventListener('enterframe', function() {

      // プレイヤーの移動処理

      // 歩行アニメーションのフレーム切り替え
      this.frame = this.direction * 3 + this.walk;
      // 移動中の処理
      if (this.isMoving) {
        // 「vx」「vy」プロパティの分だけ移動する
        this.moveBy(this.vx, this.vy);
        // 歩行アニメーションの基準フレーム番号を取得する
        this.walk = core.frame % 3;
          // 次のマス(16x16が1マス)まで移動しきったら停止する
          if ((this.vx && (this.x - 8) % 16 == 0) || (this.vy && this.y % 16 == 0)) {
            this.isMoving = false;
            this.walk = 0;
          }
      } else {
        // 移動中でないときは、パッドやキーの入力に応じて、向きや移動先を設定する
        this.vx = this.vy = 0;
        if (core.input.left) {
          this.direction = 1;
          this.vx = -4;
        } else if (core.input.right) {
          this.direction = 2;
          this.vx = 4;
        } else if (core.input.up) {
          this.direction = 3;
          this.vy = -4;
        } else if (core.input.down) {
          this.direction = 0;
          this.vy = 4;
        }
        // 移動先が決まったら、
        if (this.vx || this.vy) {
          // 移動先の座標を求める
          var x = this.x + (this.vx ? this.vx / Math.abs(this.vx) * 16 : 0) + 16;
          var y = this.y + (this.vy ? this.vy / Math.abs(this.vy) * 16 : 0) + 16;
          // その座標が移動可能な場所なら
          if (0 <= x && x < map.width && 0 <= y && y < map.height && !map.hitTest(x, y)) {
            // 移動フラグを「true」にする
            this.isMoving = true;
            // 自身(「enterframe」イベントリスナ)を呼び出す
            // (歩行アニメーションをスムーズに表示するため)
            arguments.callee.call(this);
          }
        }
      }
    });
  }
});

// 町のマップデータ
var town = {
  'bg1': [
    [20,20,20,20,20,20,20,20,20,20,20,20,20,48,49,49,49,49,33,33,33,33,33,33,33,33,33,33,33,33],
    [20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,48,49,49,49,49,49,49,49,49,49,49,49],
    [20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,48,49],
    [20,20,20,20,20,20,20,20,20,20,20,4,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20],
    [20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20],
    [20,20,20,81,81,81,81,81,81,81,81,4,20,20,20,20,20,20,20,81,81,81,81,81,81,81,81,20,20,5],
    [20,20,20,81,81,81,81,81,81,81,81,37,37,37,37,20,20,20,20,81,81,81,81,81,81,66,66,20,20,5],
    [20,20,20,81,81,81,81,81,81,81,81,37,37,37,37,37,20,20,20,81,81,81,81,81,81,81,81,20,20,20],
    [20,20,20,81,81,81,81,81,81,81,81,37,37,37,37,37,37,37,37,81,81,81,81,81,81,81,81,20,20,20],
    [20,20,20,81,81,81,81,81,81,81,81,37,37,37,37,37,37,37,37,81,81,81,81,81,81,81,81,20,20,20],
    [20,20,20,81,81,81,81,81,81,81,81,37,37,37,37,37,37,37,37,81,81,81,81,81,81,81,81,20,20,20],
    [20,20,20,81,81,81,81,81,81,81,81,37,37,37,37,37,37,37,20,81,81,81,81,81,81,81,81,20,20,20],
    [20,20,20,20,35,19,83,85,20,20,37,37,37,37,37,37,37,37,20,20,20,20,83,85,20,20,20,20,20,20],
    [20,20,20,20,35,19,99,101,20,20,37,37,37,37,37,37,37,37,37,20,20,20,99,101,20,20,20,20,20,20],
    [20,20,20,35,35,19,99,101,20,20,37,20,20,20,20,37,20,20,20,20,20,20,99,101,20,20,20,20,20,20],
    [20,20,20,20,20,19,99,101,20,20,20,20,20,20,20,37,20,20,20,20,20,20,99,101,20,20,20,20,20,20],
    [20,20,20,20,19,19,99,101,20,20,20,20,20,20,20,20,20,20,20,20,20,20,99,101,20,20,20,20,20,20],
    [20,20,20,20,19,19,99,101,20,20,20,20,20,20,20,20,20,20,20,20,20,20,99,101,20,20,20,20,20,20],
    [20,20,20,20,19,19,99,101,20,20,20,20,20,20,20,20,20,20,20,20,20,20,99,101,20,20,20,20,20,20],
    [20,20,20,20,19,19,99,101,20,20,20,20,20,20,20,20,20,20,20,20,20,20,99,101,20,20,20,20,20,20],
    [20,20,20,20,19,19,99,100,84,84,84,84,84,84,84,84,84,84,84,84,84,84,100,101,20,20,20,20,20,20],
    [20,20,20,20,19,19,115,116,116,116,116,116,116,116,100,100,116,116,116,116,116,116,116,117,20,20,20,20,20,20],
    [20,20,20,20,20,20,20,20,20,20,20,20,20,20,99,101,20,20,20,20,20,20,20,20,20,20,20,20,20,20],
    [20,20,20,20,20,20,20,20,20,20,20,20,20,20,99,101,20,20,20,20,20,20,20,16,17,17,17,17,17,17],
    [84,84,84,84,84,85,20,20,20,20,20,20,20,20,99,101,20,20,20,20,20,20,16,33,33,33,33,33,49,49],
    [100,100,100,100,100,101,20,20,20,20,20,20,20,20,99,101,20,20,20,20,20,20,32,33,33,49,49,50,20,20],
    [100,100,100,100,101,132,20,20,20,20,20,20,20,20,99,101,20,20,20,20,20,20,32,33,50,20,20,20,20,20],
    [100,100,100,100,117,132,20,20,20,20,20,20,20,20,99,101,20,20,20,20,20,20,32,34,20,20,20,20,20,20],
    [100,100,100,101,36,36,20,20,20,20,20,20,20,20,99,101,20,20,20,20,20,20,32,34,20,20,20,20,20,20],
    [100,100,100,101,36,20,20,20,20,20,20,20,20,20,99,101,20,20,20,20,20,20,32,34,20,20,20,20,20,20]
  ],
  'bg2': [
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,33,33],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,60,61,-1,-1,-1,60,61,-1,-1,-1,60,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,76,77,-1,-1,-1,76,77,-1,-1,-1,76,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,7,23,23,23,23,23,23,7,-1,-1,-1,-1,-1,-1,-1,-1,7,23,23,23,23,23,23,7,60,61,-1],
    [-1,60,61,7,29,-1,-1,27,-1,13,7,60,61,-1,-1,-1,-1,-1,-1,7,29,-1,27,27,-1,13,7,76,77,-1],
    [-1,76,77,7,-1,-1,-1,-1,-1,-1,7,76,77,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,7,-1,-1,-1],
    [-1,-1,-1,7,38,38,38,38,38,38,7,-1,-1,-1,-1,-1,28,-1,-1,7,38,38,38,38,38,38,7,60,61,-1],
    [-1,60,61,7,-1,-1,-1,-1,-1,11,7,60,61,-1,28,-1,-1,-1,-1,7,11,-1,-1,-1,-1,-1,7,76,77,-1],
    [-1,76,77,7,-1,-1,-1,-1,-1,11,7,76,77,-1,-1,-1,-1,-1,-1,7,11,-1,-1,-1,-1,-1,7,-1,-1,-1],
    [-1,-1,-1,23,23,23,-1,-1,23,23,23,-1,-1,-1,-1,-1,28,-1,-1,23,23,23,-1,-1,23,23,23,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,59,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,59,-1,-1,-1,-1,-1,28,-1,-1],
    [-1,-1,-1,-1,-1,75,-1,-1,-1,-1,-1,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,75,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,28,-1,-1,-1,-1],
    [-1,-1,28,-1,-1,-1,-1,-1,-1,-1,-1,28,-1,-1,-1,-1,60,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,76,77,-1,-1,-1,-1,-1,-1,-1,28,-1,-1,-1,-1],
    [-1,-1,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,28,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,60,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,76,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,28,-1,28,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,28,-1,28,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]
  ],
  collisionData: [
    [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0],
    [0,0,0,1,1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,1,1,0],
    [0,1,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0],
    [0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0],
    [0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,0],
    [0,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0],
    [0,0,0,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1],
    [0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0]
  ],
  fg: [
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,33,33],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,60,61,-1,-1,-1,60,61,-1,-1,-1,60,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,60,61,-1],
    [-1,60,61,-1,-1,-1,-1,-1,-1,-1,-1,60,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,60,61,-1],
    [-1,60,61,-1,-1,-1,-1,-1,-1,-1,-1,60,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,60,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,60,61,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]
  ]
} 
