<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <title><%= title %></title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="css/bootstrap.min.css" rel="stylesheet" media="screen">
    <link href="css/common.css" rel="stylesheet" media="screen">
  </head>
  <body>
 
    <%- include navbar %>

    <div class="container">
      <div class="row">
        <div class="col-sm-3">

        <%- include left %>

        </div>
        <div class="col-sm-9">
          <div class="panel panel-primary">
          <div class="panel-heading">JavaScriptコアリファレンス[A]</div>
          <div class="panel-body">
<pre>
arguments[]
関数の引数の配列

コーディング形式

     arguments


解説

     arguments[]配列は、関数本体の中でのみ定義されます。関数本体の中では、argumentsは関数のArgumentsオブジェクトを参照します。このオブジェクトは番号付けされたプロパティを持ち、関数に渡されたすべての引数を含む配列として働きます。基本的にarguments識別子は、すべての関数内で自動的に宣言され初期化されたローカル変数です。arguments識別子は関数本体の中でのみArgumentsオブジェクトを参照し、グローバルコード内では未定義になります。


関連項目

     Arguments、『JavaScript第６版』（オライリー）の８章


Arguments
関数の引数と他のプロパティ

コーディング形式

     arguments
     arguments[n]


要素

     Argumentsオブジェクトは関数本体の中でのみ定義されます。Argumentsオブジェクトは厳密には配列ではありませんが、配列要素として機能する番号付けされたプロパティと配列要素の数を指定するlengthプロパティを持ちます。Argumentsオブジェクトの要素は、関数に引数として渡された値です。要素0が最初の引数で、要素1が2番目の引数というようになります。関数宣言で引数に名前が付けられているかどうかにかかわらず、引数として渡されたすべての値がArgumentsオブジェクトの配列要素となります。


プロパティ

     callee

          現在実行中の関数への参照。

     length

          関数に渡された引数の数。つまり、Argumentsオブジェクトの配列要素の数。


解説

     関数が呼び出されるとArgumentsオブジェクトが生成され、ローカル変数argumentsがそのArgumentsオブジェクトを参照するように自動的に初期化されます。Argumentsオブジェクトは主に、関数に渡された引数の数を調べたり、名前のない引数を参照したりするために使います。しかし、配列の要素とlengthプロパティに加え、calleeプロパティによる名前のない関数がそれ自信を参照できます。
     ほとんどの目的に対しては、Argumentsオブジェクトはcalleeプロパティが追加された配列と考えることができます。しかし、ArgumentsオブジェクトはArrayのインスタンスではなく、Arguments.lengthプロパティはArray.lengthプロパティのような特別な振る舞いをすることもないので、配列のサイズを変更するために使うことはできません。
     非strictモードでは、Argumentsオブジェクトには1つの非常の独特の機能があります。関数が名前付きの引数を持つと、Argumentsオブジェクトの配列要素は関数の引数を保持するローカル変数と同義になります。Argumentsオブジェクトと引数名は同じ変数を参照する2つの異なる方法を提供することになります。引数名を持つ引数の値を変更すると、Argumentsオブジェクトから取得する値を変更することになり、Argumentsオブジェクトで引数の値を変更すると、引数名で取得する値を変更することになります。
     

関連項目

     Function、『JavaScript 第６版』（オライリー）の８章



Arguments.callee


コーディング形式



解説


使用例



Arguments.length


コーディング形式

解説


使用例


関連項目




Array


コンストラクタ


引数



リターン値



例外



リテラル構文


プロパティ


メソッド





解説


関連項目





Array.concat()


コーディング形式



Array.every()




Array.filter()




Array.forEach()



Array.indexOf()



Array.join()



Array.lastIndexOf()



Array.length


Array.map()




Array.pop()




Array.push()



Array.reduce()




Array.reduceRight()



Array.reverse()


Array.shift()



Array.slice()



Array.some()



Array.sort()




Array.splice()




Array.toLocaleString()



Array.toString()



Array.unshift()



</pre>
          </div>
          </div>
        </div>
      </div>
    </div>
    </div>

    <div id="footer"><%= title %></div>
 
    <script src="http://code.jquery.com/jquery.js"></script>
    <script src="js/bootstrap.min.js"></script>

  </body>
</html>