<%- include ../head %>
  <body>
 
    <%- include navbar %>

    <div class="container">
      <div class="row">
        <div class="col-sm-3">

        <%- include left %>

        </div>
        <div class="col-sm-9">
          <div class="panel panel-primary">
          <div class="panel-heading">
            <i class="glyphicon glyphicon-book"></i> 配列とオブジェクト</div>
          <div class="panel-body">

<h4>空の配列の初期化</h4>
<pre>
var 変数 = []; //=> 配列リテラル
var 変数 = new Array(); //=> 配列オブジェクト
var 変数 = new Array(要素の数); //=> 配列オブジェクト
</pre>

<pre>
var ary = [];
var ary = new Array();
var ary = new Array(3);
</pre>


<h4>配列に初期値をセットして初期化</h4>
<pre>
var 変数 = [値1, 値2, 値3, ….]; //=> 配列リテラル
var 変数 = new Array(値1, 値2, 値3, ...); //=> 配列オブジェクト
</pre>

<h4>配列の取得</h4>
<pre>
変数 = 配列[添え字];
</pre>

<h4>配列に代入</h4>
<pre>
配列[添え字] = 値;
</pre>

<pre class="prettyprint">
var ary = ['Hello', 'Welcome', 'Bye'];
var msg = ary[0] + '-' + arry[1];
ary[10] = msg;
alert(ary);
</pre>

<pre class="prettyprint">
var a = new Array(3);
a[0] = 10;
a[1] = 20;
a[2] = 30;
for(var i = 0; i < 3; i++){
     document.writeln(a[i]);
}
</pre>

<pre class="prettyprint">
var a = [10, 20, 30];
for(var i = 0; i < 3; i++){
     document.writeln(a[i]);
}
</pre>

<h4>配列の要素数の取得</h4>
<pre>
変数.length
</pre>

<pre class="prettyprint">
var ary = [98, 82, 70, 86, 53];
var total = 0;
for(var i = 0; i < ary.length; i++){
  total += ary[i];
}
alert('合計: ' + total);
</pre>

<hr>
<h4>二次元配列</h4>
<p>配列として宣言されたデータに、さらに配列を格納すると、二次元配列になります。</p>

<pre class="prettyprint">
var ary = [];
ary[0] = ['a', 'b', 'c'];
ary[1] = [true, true, false];
ary[2] = ['10', 'a', {'a': true}];
</pre>

<p>以下のように配列にあらかじめ値が格納されていた場合、ary[0]には10が格納されていますが、その値「10」を上書きするように、配列「['a', 'b', 'c']」が格納されるので注意しましょう。</p>
<pre class="prettyprint">
var ary = [10, 20, 30];
ary[0] = ['a', 'b', 'c'];
ary[1] = [true, true, false];
ary[2] = ['10', 'a', {'a': true}];
</pre>

<p>配列に、Arrayオブジェクトのコンストラクタを格納しても同様に、二次元配列になります。</p>

<pre class="prettyprint">
var ary = new Array();
ary[0] = new Array('b','b','c');
ary[1] = new Array(true, true, false);
ary[2] = new Array('10', 'a', {'a': true});
</pre>

<p>Arrayオブジェクトのpushメソッドで配列に格納することもできます。</p>
<pre class="prettyprint">
var ary = [];
ary.push(['a', 'b', 'c']);
ary.push([true, true, false]);
ary.push(['10', 'a', {'a': true}]);
</pre>

<p>二次元配列の初期値がわかっている場合は、以下のように記述すると可読性が高まります。</p>
<pre class="prettyprint">
var ary[
  ['a', 'b', 'c'],
  [true, true, false],
  ['10', 'a', {'a': true}] 
];
</pre>

          </div>
          </div>
        </div>
      </div>
    </div>
    </div>

    <div id="footer"><%= title %></div>
 
    <script src="http://code.jquery.com/jquery.js"></script>
    <script src="js/google-code-prettify/prettify.js"></script>
    <script>prettyPrint();</script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/list-counter.js"></script>
  </body>
</html>