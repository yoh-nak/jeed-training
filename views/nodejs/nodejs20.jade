extends ../layout

block link
    link(href='../css/bootstrap.min.css',rel='stylesheet',media='screen')
    link(href='../css/bootstrap-theme.min.css',rel='stylesheet',media='screen')
    link(href='../js/dtree/dtree.css', rel='stylesheet', media='screen')
    link(href='../css/style.css',rel='stylesheet',media='screen')
    link(href='../js/google-code-prettify/prettify.css',rel='stylesheet',media='screen')

block content
    include navbar
    .container
        .row
            .col-sm-3
                include left
            .col-sm-9
                .panel.panel-primary
                    .panel-heading
                        i.glyphicon.glyphicon-book
                        |  PostgreSQLと連携する⑤
                    .panel-body
                        .alert.alert-info レコードの削除ページを作成
                        p views/delete.jade
                        pre(class='prettyprint linenums:1')
                            :code
                                extends layout

                                block content
                                    h1= title
                                    p Welcome to #{title}
                                    p#msg #{msg}
                                    p= 'id:' + data.id + ' name:' + data.name
                                    form(method='post',action='/remove')
                                        input(type='hidden',name='id',value='#{data.id}')
                                        input(type='submit',value='削除する')
                        p routes/delete.js
                        pre(class='prettyprint linenums:1')
                            :code
                                var pg = require('pg');

                                exports.del = function(req, res){
                                    
                                    var id = req.params.id;

                                    var conf = 'tcp://postgres:admin@localhost:5433/mydb';

                                    pg.connect(conf, function(err, client){
                                        var sql = "SELECT * FROM mydata WHERE id = " + id;
                                        client.query(sql, function(err, result){
                                            if(err){
                                                console.log(err);
                                                res.redirect('/');
                                            }
                                            else{
                                                res.render('delete',{
                                                    title: 'Express',
                                                    msg: 'このレコードを削除しますか',
                                                    data: result.rows[0]
                                                });
                                            }
                                        });
                                    });
                                };
                        p app.js
                        pre(class='prettyprint linenums:1')
                            :code
                                /**
                                 * Module dependencies.
                                 */

                                var express = require('express');
                                var routes = require('./routes');
                                var user = require('./routes/user');
                                var http = require('http');
                                var path = require('path');
                                var add = require('./routes/add');
                                var create = require('./routes/create');
                                var edit = require('./routes/edit');
                                var update = require('./routes/update');
                                <mark>var del = require('./routes/delete');</mark>

                                var app = express();

                                // all environments
                                app.set('port', process.env.PORT || 3000);
                                app.set('views', path.join(__dirname, 'views'));
                                app.set('view engine', 'jade');
                                app.use(express.favicon());
                                app.use(express.logger('dev'));
                                app.use(express.json());
                                app.use(express.urlencoded());
                                app.use(express.methodOverride());
                                app.use(app.router);
                                app.use(require('stylus').middleware(path.join(__dirname, 'public')));
                                app.use(express.static(path.join(__dirname, 'public')));

                                // development only
                                if ('development' == app.get('env')) {
                                  app.use(express.errorHandler());
                                }

                                app.get('/', routes.index);
                                app.get('/add', add.add);
                                app.post('/create', create.create);
                                app.get('/edit/:id', edit.edit);
                                app.post('/update', update.update);
                                <mark>app.get('/delete/:id', del.del);</mark>
                                app.get('/users', user.list);

                                http.createServer(app).listen(app.get('port'), function(){
                                  console.log('Express server listening on port ' + app.get('port'));
                                });
                        .alert.alert-info レコードを削除する
                        p routes/remove.js
                        pre(class='prettyprint linenums:1')
                            :code
                                var pg = require('pg');

                                exports.remove = function(req, res){

                                    var conf = 'tcp://postgres:admin@localhost:5433/mydb';

                                    pg.connect(conf, function(err, client){
                                        if(err){
                                            console.log(err);
                                            res.redirect('/');
                                        }
                                        else{
                                            var sql = "DELETE from mydata where id = $1";
                                            client.query(sql, [req.body.id], function(err, result){
                                                console.log(err);
                                                res.redirect('/');
                                            });
                                        }
                                    });
                                };
                        p app.js
                        pre(class='prettyprint linenums:1')
                            :code
                                /**
                                 * Module dependencies.
                                 */

                                var express = require('express');
                                var routes = require('./routes');
                                var user = require('./routes/user');
                                var http = require('http');
                                var path = require('path');
                                var add = require('./routes/add');
                                var create = require('./routes/create');
                                var edit = require('./routes/edit');
                                var update = require('./routes/update');
                                var del = require('./routes/delete');
                                <mark>var remove = require('./routes/remove');</mark>

                                var app = express();

                                // all environments
                                app.set('port', process.env.PORT || 3000);
                                app.set('views', path.join(__dirname, 'views'));
                                app.set('view engine', 'jade');
                                app.use(express.favicon());
                                app.use(express.logger('dev'));
                                app.use(express.json());
                                app.use(express.urlencoded());
                                app.use(express.methodOverride());
                                app.use(app.router);
                                app.use(require('stylus').middleware(path.join(__dirname, 'public')));
                                app.use(express.static(path.join(__dirname, 'public')));

                                // development only
                                if ('development' == app.get('env')) {
                                  app.use(express.errorHandler());
                                }

                                app.get('/', routes.index);
                                app.get('/add', add.add);
                                app.post('/create', create.create);
                                app.get('/edit/:id', edit.edit);
                                app.post('/update', update.update);
                                app.get('/delete/:id', del.del);
                                <mark>app.post('/remove', remove.remove);</mark>
                                app.get('/users', user.list);

                                http.createServer(app).listen(app.get('port'), function(){
                                  console.log('Express server listening on port ' + app.get('port'));
                                });
