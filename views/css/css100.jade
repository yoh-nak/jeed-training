include ../head2.jade
	body
		include navbar.jade
		.container
			.row
				.col-sm-3
					include left.jade
				.col-sm-9
					.panel.panel-primary
						.panel-heading
							i.glyphicon.glyphicon-book
							| &nbsp;フィルタ
						.panel-body
							.alert.alert-info フィルタ
							table.browser-support
								tr
									td
										img(src='../images/ic-apple.png') （※）
									td
										img(src='../images/ic-android.png') （※）
									td
										img(src='../images/ic-firefox.png') （※）
									td
										img(src='../images/ic-safari.png') （※）
									td
										img(src='../images/ic-chrome.png') （※）
									td.not-support
										img(src='../images/ic-opera.png')
									td.not-support
										img(src='../images/ic-ie.png')
							pre
								| filter: フィルタ
							p
								| フィルタ・・・grayscale() ／ sepia() ／ saturate() ／ hue-rotate() ／ invert() ／ opacity() ／ brightness() ／ contrast() ／ blur() ／ drop-shadow() ／ custom() ／ url() ／ none
							table.table
								tr
									td 初期値
									td none
								tr
									td 継承
									td なし
								tr
									td 適用先
									td 全要素
								tr
									td 比率
									td -
								tr
									td モジュール
									td Filter Effects
							p='filterプロパティを利用すると、grayscale()といったフィルタ関数や、SVGの<filter>で定義した設定を使ってコンテンツにフィルタをかけることができます。スペースで区切って記述することにより、複数のフィルタをかけることも可能です。'
							p='iOS、Android、Safari、Chromeはフィルタ関数の指定に、FirefoxはSVGの<filter>で定義した設定の指定に対応しています。'
							hr
							h4 SAMPLE A：フィルタ関数によるフィルタ
							p='下のサンプルは<div>が構成するボックスにサンドイッチの画像と文字を表示したものです。<div>のfilterプロパティでhue-rotate()、brightness()、contrast()、saturate()の4つのフィルタ関数を指定し、色相、明るさ、コントラスト、サイドを調節すると、下のような表示になります。'
							p='指定できるフィルタ関数は以下のようになっています。たとえば、明るさを変えるbrightness()関数の場合、初期値の100%では表示は変化しませんが、100%以下の値にすると暗く、100%以上の値にすると明るく調節することができます。'
							p
								a.btn.btn-default(href='../demo/css/sample1/05/320-A.html',target='_blank')
									i.glyphicon.glyphicon-play
									| デモ
							p
								a.btn.btn-default(href='../demo/css/sample1/05/320-A-all.html',target='_blank')
									i.glyphicon.glyphicon-play
									| デモ
							hr
							h4 SAMPLE B：カスタムフィルタ
							p='custom()フィルタを利用すると、カスタムフィルタを作成することができます。ただし、フィルタの処理を行うvertex shader（vs）やfragment shader（fs）を用意する必要があります。そのため、AdobeのCSS FilterLabに用意されたカスタムフィルタの設定をりようするのが便利です。たとえば、「crumple」（しわくちゃ）の設定をcustom()で適用すると下のようになります。'
							p
								a.btn.btn-default(href='../demo/css/sample1/05/320-B.html',target='_blank')
									i.glyphicon.glyphicon-play
									| デモ
							p		
								| Adobe CSS FilterLab
								br
								a(href='http://html.adobe.com/webplatform/graphics/customfilters/cssfilterlab/',target='_blank') http://html.adobe.com/webplatform/graphics/customfilters/cssfilterlab/
							hr
							h4='SAMPLE C：<filter>で定義した設定によるフィルタ'
							p='filterプロパティではSVGの<filter>で定義した設定を使ってフィルタをかけることもできます。'
							p='たとえば、下のサンプルではSVGの<filter>で元のコンテンツを右下にずらしてブラーをかけ、元のコンテンツと重ねて表示するように設定しています。この設定を利用するためには、filterプロパティで<filter>のIDを指定します。ここでは「url(#myfilter)」と指定します。'
							p
								a.btn.btn-default(href='../demo/css/sample1/05/320-C.html',target='_blank')
									i.glyphicon.glyphicon-play
									| デモ
							p='なお、<filter>の設定によるフィルタには現在のところFirefoxが対応しています。'
		.footer=title
		script(src='http://code.jquery.com/jquery-1.11.0.min.js')
		script(src='../js/google-code-prettify/prettify.js')
		script.
			prettyPrint();
		script(src='../js/bootstrap.min.js')
		script(src='../coffee/list-counter.js')