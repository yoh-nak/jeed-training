include ../../head.jade
    body
        include navbar.jade
        div.container
            div.row
                div.col-sm-3
                    div.list-group
                        a.list-group-item(href='canvas27.jade')
                              i.badge.badge-info
                              | 準備
                        a.list-group-item(href='canvas28.jade')
                              i.badge.badge-info
                              | 速度
                        a.list-group-item(href='canvas29.jade')
                              i.badge.badge-info
                              | 境界
                        a.list-group-item(href='canvas30.jade')
                              i.badge.badge-info
                              | 加速度
                        a.list-group-item(href='canvas31.jade')
                              i.badge.badge-info
                              | 摩擦
                        a.list-group-item(href='canvas32.jade')
                              i.badge.badge-info
                              | 衝突
                        a.list-group-item(href='canvas33.jade')
                              i.badge.badge-info
                              | 跳ね返り
                        a.list-group-item(href='canvas34.jade')
                              i.badge.badge-info
                              | 運動量保存
                div.col-sm-9
                    div.panel.panel-primary
                        div.panel-heading 速度
                        div.panel-body
                            h4 速度
                            p
                                a.btn.btn-default(href='demo/canvas/exercise5/index3.html',target='_blank')
                                    i.glyphicon.glyphicon-play
                                    | デモ
                            p 先に進む前に、キャンバスの周囲境界を張り巡らせ、これら始末に負えないアステロイドたちが逃げ出せないようにしましょう。幸い、前章で使ったのと非常によく似たコードが使えます。ただし、新しい速度コードに対応するために、修正が必要です。アニメーションループのアステロイド描画コードの上に次のコードを挿入してください。
                            pre.prettyprint.linenums
                                | if (tmpAsteroid.x-tmpAsteroid.radius &lt; 0) {
                                |   tmpAsteroid.x = tmpAsteroid.radius;
                                |   tmpAsteroid.vX *= -1;
                                | } else if (tmpAsteroid.x+tmpAsteroid.radius &gt; canvasWidth) {
                                |   tmpAsteroid.x = canvasWidth-tmpAsteroid.radius;
                                |   tmpAsteroid.vX *= -1;
                                | }
                                | 
                                | if (tmpAsteroid.y-tmpAsteroid.radius &lt; 0) {
                                |   tmpAsteroid.y = tmpAsteroid.radius;
                                |   tmpAsteroid.vY *= -1;
                                | } else if (tmpAsteroid.y+tmpAsteroid.radius &gt; canvasHeight) {
                                |   tmpAsteroid.y = canvasHeight-tmpAsteroid.radius;
                                |   tmpAsteroid.vY *= -1;
                                | }
                            p この2つの条件文は、アステロイドがキャンバスに描かれる前に、アステロイドの位置をチェックします。アステロイドの縁が4つの境界のどれかよりも外にはみ出している場合には、速度を逆にして反対方向に跳ね返らせるようにします。跳ね返らせなければ、アステロイドは境界にくっついてしまうか、境界の外に逃げ出してしまいます。なお、アステロイドとして円を使っているので、(x, y)座標が円の中心になることを忘れないでください。そのため、アステロイドの端のx、y座標は、円の(x, y)座標に円の半径を加減しなければわかりません。
                            p ページをリフレッシュすると、漂っているアステロイド群は、ブラウザウィンドウの境界のところで跳ね返るようになります。厄介なアステロイドたちをコントロールできるようになったので、物理の別の分野に踏み込んでみましょう。    
                            pre.prettyprint.linenums
                                | $(function(){   
                                |   var canvas = $('#myCanvas');
                                |   var context = canvas.get(0).getContext('2d');
                                |   
                                |   var canvasWidth = canvas.width();
                                |   var canvasHeight = canvas.height();
                                |   
                                |   $(window).resize(resizeCanvas);
                                |   
                                |   function resizeCanvas(){
                                |       canvas.attr('width', $(window).get(0).innerWidth);
                                |       canvas.attr('height', $(window).get(0).innerHeight);
                                |       
                                |       canvasWidth = canvas.width();
                                |       canvasHeight = canvas.height();
                                |   }
                                |   
                                |   resizeCanvas();
                                |   
                                |   var playAnimation = true;
                                |   
                                |   var startButton = $('#startAnimation');
                                |   var stopButton = $('#stopAnimation');
                                |   
                                |   startButton.hide();
                                |   startButton.click(function(){
                                |       $(this).hide();
                                |       stopButton.show();
                                |       
                                |       playAnimation = true;
                                |       animate();
                                |   });
                                |   
                                |   stopButton.click(function(){
                                |       $(this).hide();
                                |       startButton.show();
                                |       
                                |       playAnimation = false;
                                |   });
                                |   
                                |   var Asteroid = function(x, y, radius, vX, vY){
                                |       this.x = x;
                                |       this.y = y;
                                |       this.radius = radius;
                                | 
                                |       this.vX = vX;
                                |       this.vY = vY;
                                |   }
                                |   
                                |   var asteroids = new Array();
                                |   
                                |   for(var i = 0; i &lt; 10; i++){
                                |       var x = 20+(Math.random()*(canvasWidth-40));
                                |       var y = 20+(Math.random()*(canvasHeight-40));
                                |       
                                |       var radius = 5+Math.random()*10;
                                | 
                                |       var vX = Math.random()*4-2;
                                |       var vY = Math.random()*4-2;
                                |       
                                |       asteroids.push(new Asteroid(x, y, radius, vX, vY));
                                |   }
                                | 
                                |   function animate(){                 
                                | 
                                |       context.clearRect(0, 0, canvasWidth, canvasHeight);
                                |       
                                |       context.fillStyle = 'rgb(255, 255, 255)';
                                |       
                                |       var asteroidsLength = asteroids.length;
                                |       for (var i = 0; i &lt; asteroidsLength; i++) {
                                |           var tmpAsteroid = asteroids[i];
                                | 
                                |           tmpAsteroid.x += tmpAsteroid.vX;
                                |           tmpAsteroid.y += tmpAsteroid.vY;
                                | 
                                mark
                                    |           if (tmpAsteroid.x-tmpAsteroid.radius &lt; 0) {
                                    |               tmpAsteroid.x = tmpAsteroid.radius;
                                    |               tmpAsteroid.vX *= -1;
                                    |           } else if (tmpAsteroid.x+tmpAsteroid.radius &gt; canvasWidth) {
                                    |               tmpAsteroid.x = canvasWidth-tmpAsteroid.radius;
                                    |               tmpAsteroid.vX *= -1;
                                    |           }
                                    |           
                                    |           if (tmpAsteroid.y-tmpAsteroid.radius &lt; 0) {
                                    |               tmpAsteroid.y = tmpAsteroid.radius;
                                    |               tmpAsteroid.vY *= -1;
                                    |           } else if (tmpAsteroid.y+tmpAsteroid.radius &gt; canvasHeight) {
                                    |               tmpAsteroid.y = canvasHeight-tmpAsteroid.radius;
                                    |               tmpAsteroid.vY *= -1;
                                    |           }
                                |           
                                |           context.beginPath();
                                |           context.arc(tmpAsteroid.x, tmpAsteroid.y, tmpAsteroid.radius, 0, Math.PI*2);
                                |           context.closePath();
                                |           context.fill();
                                |       }
                                |       
                                |       if (playAnimation) {
                                |           setTimeout(animate, 33);
                                |       }
                                |   }
                                |   animate();
                                | });
        div#footer=title
        script(src='http://code.jquery.com/jquery.js')
        script(src='js/google-code-prettify/prettify.js')
        script.
            prettyPrint();
        script(src='js/bootstrap.min.js')
        script(src='js/list-counter.js')