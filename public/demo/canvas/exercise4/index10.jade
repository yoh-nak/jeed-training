!!!
html(lang='ja')
	head
		meta(charset='utf-8')
		meta(name='viewport',content='width=device-width, initial-scale=1.0')
		title
		style.
			#myCanvas{
				display:block;
			}
	body
		canvas#myCanvas(width='500',height='500')
		button#startAnimation Start
		button#stopAnimation Stop
		script(src='http://code.jquery.com/jquery-1.10.2.min.js')
		script.
			$(function(){	
			var canvas = $('#myCanvas');
			var context = canvas.get(0).getContext('2d');

			var canvasWidth = canvas.width();
			var canvasHeight = canvas.height();

			var playAnimation = true;

			var startButton = $('#startAnimation');
			var stopButton = $('#stopAnimation');

			startButton.hide();
			startButton.click(function() {
			$(this).hide();
			stopButton.show();

			playAnimation = true;
			animate();
			});

			stopButton.click(function() {
			$(this).hide();
			startButton.show();

			playAnimation = false;
			});

			// Class that defines new shapes to draw
			var Shape = function(x, y, width, height) {
			this.x = x;
			this.y = y;
			this.width = width;
			this.height = height;

			this.reverseX = true;
			this.reverseY = false;
			};

			// Array that holds all the shapes to draw
			var shapes = new Array();

			// Setting up some shapes
			for (var i = 0; i < 10; i++) {
			var x = Math.random()*250;
			var y = Math.random()*250;
			var width = height = Math.random()*30;
			shapes.push(new Shape(x, y, width, height));
			};

			// Animation loop that does all the fun stuff
			function animate() {
			// Clear
			context.clearRect(0, 0, canvasWidth, canvasHeight);

			// Loop through every object
			var shapesLength = shapes.length;
			for (var i = 0; i < shapesLength; i++) {
			var tmpShape = shapes[i];

			// Update
			// Check direction to move shape
			if (!tmpShape.reverseX) {
			tmpShape.x += 2;
			} else {
			tmpShape.x -= 2;
			};

			if (!tmpShape.reverseY) {
			tmpShape.y += 2;
			} else {
			tmpShape.y -= 2;
			};

			// Draw shape
			context.fillRect(tmpShape.x, tmpShape.y, tmpShape.width, tmpShape.height);

			// Check the boundaries
			if (tmpShape.x < 0) {
			tmpShape.reverseX = false;
			} else if (tmpShape.x + tmpShape.width > canvasWidth) {
			tmpShape.reverseX = true;
			};

			if (tmpShape.y < 0) {
			tmpShape.reverseY = false;
			} else if (tmpShape.y + tmpShape.height > canvasHeight) {
			tmpShape.reverseY = true;
			};

			};

			if (playAnimation) {
			// Run the animation loop again in 33 milliseconds
			setTimeout(animate, 33);
			};
			};

			// Start the animation loop
			animate();
			});